{
  "openapi": "3.0.0",
  "info": {
    "title": "Invoice Ninja",
    "description": "Invoice Ninja. Open Source Invoicing lives here. ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "contact@invoiceninja.com"
    },
    "license": {
      "name": "Elastic License",
      "url": "https://www.elastic.co/licensing/elastic-license"
    },
    "version": "5.5.58"
  },
  "externalDocs": {
    "description": "https://invoiceninja.github.io",
    "url": "https://invoiceninja.github.io"
  },
  "servers": [
    {
      "url": "https://ninja.test",
      "description": "Example InvoiceNinja base url"
    }
  ],
  "tags": [
    {
      "name": "login",
      "description": "Authentication",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://invoiceninja.github.io"
      }
    }
  ],
  "paths": {
    "/api/v1/signup": {
      "post": {
        "tags": [
          "signup"
        ],
        "summary": "Attempts a new account signup",
        "description": "Attempts a new account signup and returns a CompanyUser object on success",
        "operationId": "postSignup",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "token_name",
            "in": "query",
            "description": "A custom name for the user company token",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "Daves iOS Device"
          }
        ],
        "requestBody": {
          "description": "Signup credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_signup_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Company User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activities": {
      "get": {
        "tags": [
          "actvities"
        ],
        "summary": "Gets a list of actvities",
        "description": "Lists all activities",
        "operationId": "getActivities",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "The number of activities to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "integer"
            },
            "example": "50"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of actvities",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actvities/download_entity/{activity_id}": {
      "get": {
        "tags": [
          "actvities"
        ],
        "summary": "Gets a PDF for the given activity",
        "description": "Gets a PDF for the given activity",
        "operationId": "getActivityHistoricalEntityPdf",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "description": "The Activity Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "PDF File",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "404": {
            "description": "No file exists for the given record"
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Attempts authentication",
        "description": "Returns a CompanyUser object on success",
        "operationId": "postLogin",
        "parameters": [
          {
            "name": "X-Api-Secret",
            "in": "header",
            "description": "The API secret as defined by the .env variable API_SECRET",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "password"
            }
          },
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "include_static",
            "in": "query",
            "description": "Returns static variables",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "include_static=true"
            }
          },
          {
            "name": "clear_cache",
            "in": "query",
            "description": "Clears the static cache",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clear_cache=true"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_login_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Company User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/refresh": {
      "post": {
        "tags": [
          "refresh"
        ],
        "summary": "Refreshes the dataset",
        "description": "Refreshes the dataset",
        "operationId": "refresh",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "include_static",
            "in": "query",
            "description": "Returns static variables",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "include_static=true"
            }
          },
          {
            "name": "clear_cache",
            "in": "query",
            "description": "Clears the static cache",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clear_cache=true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Company User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yodlee/refresh": {
      "post": {
        "tags": [
          "yodlee"
        ],
        "summary": "Processing webhooks from Yodlee",
        "description": "Notifies the system when a data point can be refreshed",
        "operationId": "yodleeRefreshWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations": {
      "get": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Gets a list of bank_integrations",
        "description": "Lists all bank integrations",
        "operationId": "getBankIntegrations",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "The number of bank integrations to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "integer"
            },
            "example": "50"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bank integrations",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Adds a bank_integration",
        "description": "Adds an bank_integration to a company",
        "operationId": "storeBankIntegration",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/{id}": {
      "get": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Shows a bank_integration",
        "description": "Displays a bank_integration by id",
        "operationId": "showBankIntegration",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankIntegration Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Updates a bank_integration",
        "description": "Handles the updating of a bank_integration by id",
        "operationId": "updateBankIntegration",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankIntegration Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Deletes a bank_integration",
        "description": "Handles the deletion of a bank_integration by id",
        "operationId": "deleteBankIntegration",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankIntegration Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/{id}/edit": {
      "get": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Shows a bank_integration for editing",
        "description": "Displays a bank_integration by id",
        "operationId": "editBankIntegration",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankIntegration Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/create": {
      "get": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Gets a new blank bank_integration object",
        "description": "Returns a blank object with default values",
        "operationId": "getBankIntegrationsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/bulk": {
      "post": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Performs bulk actions on an array of bank_integrations",
        "description": "",
        "operationId": "bulkBankIntegrations",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Action paramters",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/refresh_accounts": {
      "post": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Gets the list of accounts from the remote server",
        "description": "Adds an bank_integration to a company",
        "operationId": "getRefreshAccounts",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/remove_account/account_id": {
      "post": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Removes an account from the integration",
        "description": "Removes an account from the integration",
        "operationId": "getRemoveAccount",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_integration object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_integrations/get_transactions/account_id": {
      "post": {
        "tags": [
          "bank_integrations"
        ],
        "summary": "Retrieve transactions for a account",
        "description": "Retrieve transactions for a account",
        "operationId": "getAccountTransactions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve transactions for a account",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegration"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transactions": {
      "get": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Gets a list of bank_transactions",
        "description": "Lists all bank integrations",
        "operationId": "getBankTransactions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "The number of bank integrations to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "integer"
            },
            "example": "50"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bank integrations",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Adds a bank_transaction",
        "description": "Adds an bank_transaction to a company",
        "operationId": "storeBankTransaction",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved bank_transaction object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transactions/{id}": {
      "get": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Shows a bank_transaction",
        "description": "Displays a bank_transaction by id",
        "operationId": "showBankTransaction",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankTransaction Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_transaction object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Updates a bank_transaction",
        "description": "Handles the updating of a bank_transaction by id",
        "operationId": "updateBankTransaction",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankTransaction Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_transaction object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Deletes a bank_transaction",
        "description": "Handles the deletion of a bank_transaction by id",
        "operationId": "deleteBankTransaction",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankTransaction Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transactions/{id}/edit": {
      "get": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Shows a bank_transaction for editing",
        "description": "Displays a bank_transaction by id",
        "operationId": "editBankTransaction",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The BankTransaction Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_transaction object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transactions/create": {
      "get": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Gets a new blank bank_transaction object",
        "description": "Returns a blank object with default values",
        "operationId": "getBankTransactionsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank bank_transaction object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transations/bulk": {
      "post": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Performs bulk actions on an array of bank_transations",
        "description": "",
        "operationId": "bulkBankTransactions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Action paramters",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transations/match": {
      "post": {
        "tags": [
          "bank_transactions"
        ],
        "summary": "Performs match actions on an array of bank_transactions",
        "description": "",
        "operationId": "matchBankTransactions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Action paramters",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transaction_rules": {
      "get": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Gets a list of bank_transaction_rules",
        "description": "Lists all bank transaction rules",
        "operationId": "getBankTransactionRules",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "The number of bank integrations to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "integer"
            },
            "example": "50"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bank integrations",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Adds a bank_transaction rule",
        "description": "Adds an bank_transaction to a company",
        "operationId": "storeBankTransactionRule",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved bank_transaction rule object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transaction_rules/{id}": {
      "get": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Shows a bank_transaction",
        "description": "Displays a bank_transaction by id",
        "operationId": "showBankTransactionRule",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Bank Transaction RuleHashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_transaction rule object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Updates a bank_transaction Rule",
        "description": "Handles the updating of a bank_transaction rule by id",
        "operationId": "updateBankTransactionRule",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Bank Transaction Rule Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_transaction rule object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Deletes a bank_transaction rule",
        "description": "Handles the deletion of a bank_transaction rule by id",
        "operationId": "deleteBankTransactionRule",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Bank Transaction Rule Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transaction_rules/{id}/edit": {
      "get": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Shows a bank_transaction for editing",
        "description": "Displays a bank_transaction by id",
        "operationId": "editBankTransactionRule",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Bank Transaction Rule Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bank_transaction rule object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transaction_rules/create": {
      "get": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Gets a new blank bank_transaction rule object",
        "description": "Returns a blank object with default values",
        "operationId": "getBankTransactionRulesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank bank_transaction rule object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionRule"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bank_transation_rules/bulk": {
      "post": {
        "tags": [
          "bank_transaction_rules"
        ],
        "summary": "Performs bulk actions on an array of bank_transation rules",
        "description": "",
        "operationId": "bulkBankTransactionRules",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Action paramters",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charts/totals": {
      "post": {
        "tags": [
          "charts"
        ],
        "summary": "Get chart data",
        "description": "Get chart data",
        "operationId": "getChartTotals",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          },
          {
            "name": "rows",
            "in": "query",
            "description": "The number of activities to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "integer"
            },
            "example": "50"
          }
        ],
        "responses": {
          "200": {
            "description": "json dataset of chart data",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Gets a list of clients",
        "description": "Lists clients, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the clients, these are handled by the ClientFilters class which defines the methods available",
        "operationId": "getClients",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of clients",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Adds a client",
        "description": "Adds an client to a company",
        "operationId": "storeClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{id}": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Shows a client",
        "description": "Displays a client by id",
        "operationId": "showClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the cl.ient object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Updates a client",
        "description": "Handles the updating of a client by id",
        "operationId": "updateClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "summary": "Deletes a client",
        "description": "Handles the deletion of a client by id",
        "operationId": "deleteClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{id}/edit": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Shows a client for editting",
        "description": "Displays a client by id",
        "operationId": "editClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/create": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Gets a new blank client object",
        "description": "Returns a blank object with default values",
        "operationId": "getClientsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/bulk": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Performs bulk actions on an array of clients",
        "description": "",
        "operationId": "bulkClients",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Client User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{id}/upload": {
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Uploads a document to a client",
        "description": "Handles the uploading of a document to a client",
        "operationId": "uploadClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{id}/purge": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Purges a client from the system",
        "description": "Handles purging a client",
        "operationId": "purgeClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{id}/{mergeable_client_hashed_id}/merge": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Merges two clients",
        "description": "Handles merging 2 clients",
        "operationId": "mergeClient",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "mergeable_client_hashed_id",
            "in": "path",
            "description": "The Mergeable Client Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client_gateway_tokens": {
      "get": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Gets a list of client_gateway_tokens",
        "description": "Lists client_gateway_tokens, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the client_gateway_tokens, these are handled by the ClientGatewayTokenFilters class which defines the methods available",
        "operationId": "getClientGatewayTokens",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of client_gateway_tokens",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGatewayToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Adds a client",
        "description": "Adds an client to a company",
        "operationId": "storeClientGatewayToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGatewayToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client_gateway_tokens/{id}": {
      "get": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Shows a client",
        "description": "Displays a client by id",
        "operationId": "showClientGatewayToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ClientGatewayToken Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the cl.ient object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGatewayToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Updates a client",
        "description": "Handles the updating of a client by id",
        "operationId": "updateClientGatewayToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ClientGatewayToken Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGatewayToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Deletes a client",
        "description": "Handles the deletion of a client by id",
        "operationId": "deleteClientGatewayToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ClientGatewayToken Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client_gateway_tokens/{id}/edit": {
      "get": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Shows a client for editting",
        "description": "Displays a client by id",
        "operationId": "editClientGatewayToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ClientGatewayToken Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGatewayToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client_gateway_tokens/create": {
      "get": {
        "tags": [
          "client_gateway_tokens"
        ],
        "summary": "Gets a new blank client object",
        "description": "Returns a blank object with default values",
        "operationId": "getClientGatewayTokensCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientGatewayToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client_statement": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Return a PDF of the client statement",
        "description": "Return a PDF of the client statement",
        "operationId": "clientStatement",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "description": "Statment Options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_client_statement_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Gets a list of companies",
        "description": "Lists companies, search and filters allow fine grained lists to be generated.\n\n        Query parameters can be added to performed more fine grained filtering of the companies, these are handled by the CompanyFilters class which defines the methods available",
        "operationId": "getCompanies",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of companies",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "companies"
        ],
        "summary": "Adds a company",
        "description": "Adds an company to the system",
        "operationId": "storeCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved company object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/create": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Gets a new blank company object",
        "description": "Returns a blank object with default values",
        "operationId": "getCompaniesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank company object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{id}": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Shows an company",
        "description": "Displays an company by id",
        "operationId": "showCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the company object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "companies"
        ],
        "summary": "Updates an company",
        "description": "Handles the updating of an company by id",
        "operationId": "updateCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the company object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "companies"
        ],
        "summary": "Deletes a company",
        "description": "Handles the deletion of an company by id",
        "operationId": "deleteCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{id}/edit": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Shows an company for editting",
        "description": "Displays an company by id",
        "operationId": "editCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the company object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{id}/upload": {
      "put": {
        "tags": [
          "companies"
        ],
        "summary": "Uploads a document to a company",
        "description": "Handles the uploading of a document to a company",
        "operationId": "uploadCompanies",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{company}/default": {
      "post": {
        "tags": [
          "companies"
        ],
        "summary": "Sets the company as the default company.",
        "description": "Sets the company as the default company.",
        "operationId": "setDefaultCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "company",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the company object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_gateways": {
      "get": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Gets a list of company_gateways",
        "description": "Lists company_gateways, search and filters allow fine grained lists to be generated.\n\n        Query parameters can be added to performed more fine grained filtering of the company_gateways, these are handled by the CompanyGatewayFilters class which defines the methods available",
        "operationId": "getCompanyGateways",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of company_gateways",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Adds a CompanyGateway",
        "description": "Adds an CompanyGateway to the system",
        "operationId": "storeCompanyGateway",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved CompanyGateway object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_gateways/create": {
      "get": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Gets a new blank CompanyGateway object",
        "description": "Returns a blank object with default values",
        "operationId": "getCompanyGatewaysCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank CompanyGateway object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_gateways/{id}": {
      "get": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Shows an CompanyGateway",
        "description": "Displays an CompanyGateway by id",
        "operationId": "showCompanyGateway",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The CompanyGateway Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CompanyGateway object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Updates an CompanyGateway",
        "description": "Handles the updating of an CompanyGateway by id",
        "operationId": "updateCompanyGateway",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The CompanyGateway Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CompanyGateway object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Deletes a CompanyGateway",
        "description": "Handles the deletion of an CompanyGateway by id",
        "operationId": "deleteCompanyGateway",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The CompanyGateway Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_gateways/{id}/edit": {
      "get": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Shows an CompanyGateway for editting",
        "description": "Displays an CompanyGateway by id",
        "operationId": "editCompanyGateway",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The CompanyGateway Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CompanyGateway object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_gateways/bulk": {
      "post": {
        "tags": [
          "company_gateways"
        ],
        "summary": "Performs bulk actions on an array of company_gateways",
        "description": "",
        "operationId": "bulkCompanyGateways",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Array of company gateway IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Company Gateways response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyGateway"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_ledger": {
      "get": {
        "tags": [
          "company_ledger"
        ],
        "summary": "Gets a list of company_ledger",
        "description": "Lists the company_ledger.",
        "operationId": "getCompanyLedger",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of company_ledger",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyLedger"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/company_users": {
      "post": {
        "tags": [
          "company_user"
        ],
        "summary": "Update a company user record",
        "description": "Attempts to update a company user record. A company user can modify only their settings fields. Full access for Admin users",
        "operationId": "updateCompanyUser",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Company User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connected_account": {
      "post": {
        "tags": [
          "connected_account"
        ],
        "summary": "Connect an oauth user to an existing user",
        "description": "Refreshes the dataset",
        "operationId": "connected_account",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "include_static",
            "in": "query",
            "description": "Returns static variables",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "include_static=true"
            }
          },
          {
            "name": "clear_cache",
            "in": "query",
            "description": "Clears the static cache",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clear_cache=true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Company User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credits": {
      "get": {
        "tags": [
          "credits"
        ],
        "summary": "Gets a list of credits",
        "description": "Lists credits, search and filters allow fine grained lists to be generated.\n     *\n     *      Query parameters can be added to performed more fine grained filtering of the credits, these are handled by the CreditFilters class which defines the methods available",
        "operationId": "getCredits",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of credits",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "credits"
        ],
        "summary": "Adds a credit",
        "description": "Adds an credit to the system",
        "operationId": "storeCredit",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credits/create": {
      "get": {
        "tags": [
          "credits"
        ],
        "summary": "Gets a new blank credit object",
        "description": "Returns a blank object with default values",
        "operationId": "getCreditsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credits/{id}": {
      "get": {
        "tags": [
          "credits"
        ],
        "summary": "Shows an credit",
        "description": "Displays an credit by id",
        "operationId": "showCredit",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Credit Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Credits"
        ],
        "summary": "Updates an Credit",
        "description": "Handles the updating of an Credit by id",
        "operationId": "updateCredit",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Credit Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credits"
        ],
        "summary": "Deletes a credit",
        "description": "Handles the deletion of an credit by id",
        "operationId": "deleteCredit",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Credit Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credits/{id}/edit": {
      "get": {
        "tags": [
          "credits"
        ],
        "summary": "Shows an credit for editting",
        "description": "Displays an credit by id",
        "operationId": "editCredit",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credits/bulk": {
      "post": {
        "tags": [
          "credits"
        ],
        "summary": "Performs bulk actions on an array of credits",
        "description": "",
        "operationId": "bulkCredits",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/credits/{id}/upload": {
      "put": {
        "tags": [
          "credits"
        ],
        "summary": "Uploads a document to a credit",
        "description": "Handles the uploading of a document to a credit",
        "operationId": "uploadCredits",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Credit Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designs": {
      "get": {
        "tags": [
          "designs"
        ],
        "summary": "Gets a list of designs",
        "description": "Lists designs",
        "operationId": "getDesigns",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of designs",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "designs"
        ],
        "summary": "Adds a design",
        "description": "Adds an design to a company",
        "operationId": "storeDesign",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved design object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designs/{id}": {
      "get": {
        "tags": [
          "designs"
        ],
        "summary": "Shows a design",
        "description": "Displays a design by id",
        "operationId": "showDesign",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Design Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the expense object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "designs"
        ],
        "summary": "Updates a design",
        "description": "Handles the updating of a design by id",
        "operationId": "updateDesign",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Design Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the design object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "designs"
        ],
        "summary": "Deletes a design",
        "description": "Handles the deletion of a design by id",
        "operationId": "deleteDesign",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Design Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designs/{id}/edit": {
      "get": {
        "tags": [
          "designs"
        ],
        "summary": "Shows a design for editting",
        "description": "Displays a design by id",
        "operationId": "editDesign",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Design Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the design object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designs/create": {
      "get": {
        "tags": [
          "designs"
        ],
        "summary": "Gets a new blank design object",
        "description": "Returns a blank object with default values",
        "operationId": "getDesignsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank design object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designs/bulk": {
      "post": {
        "tags": [
          "designs"
        ],
        "summary": "Performs bulk actions on an array of designs",
        "description": "",
        "operationId": "bulkDesigns",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Design User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Design"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Gets a list of documents",
        "description": "Lists documents, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the documents, these are handled by the DocumentsFilters class which defines the methods available",
        "operationId": "getDocuments",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of documents",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emails": {
      "post": {
        "tags": [
          "emails"
        ],
        "summary": "Sends an email for an entity",
        "description": "Sends an email for an entity",
        "operationId": "sendEmailTemplate",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "description": "The template subject and body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_emails_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expense_categories": {
      "get": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Gets a list of expense_categories",
        "description": "Lists tax rates",
        "operationId": "getExpenseCategorys",
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of expense_categories",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Adds a expense category",
        "description": "Adds an expense category to the system",
        "operationId": "storeExpenseCategory",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expense_categories/create": {
      "get": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Gets a new blank Expens Category object",
        "description": "Returns a blank object with default values",
        "operationId": "getExpenseCategoryCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank Expens Category object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expense_categories/{id}": {
      "get": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Shows a Expens Category",
        "description": "Displays an ExpenseCategory by id",
        "operationId": "showExpenseCategory",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ExpenseCategory Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Expens Category object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Updates a tax rate",
        "description": "Handles the updating of a tax rate by id",
        "operationId": "updateExpenseCategory",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ExpenseCategory Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the ExpenseCategory object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Deletes a ExpenseCategory",
        "description": "Handles the deletion of an ExpenseCategory by id",
        "operationId": "deleteExpenseCategory",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ExpenseCategory Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expense_categories/{id}/edit": {
      "get": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Shows a Expens Category for editting",
        "description": "Displays a Expens Category by id",
        "operationId": "editExpenseCategory",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ExpenseCategory Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Expens Category object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expense_categories/bulk": {
      "post": {
        "tags": [
          "expense_categories"
        ],
        "summary": "Performs bulk actions on an array of ExpenseCategorys",
        "description": "",
        "operationId": "bulkExpenseCategorys",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Expens Categorys",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The ExpenseCategory List response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses": {
      "get": {
        "tags": [
          "expenses"
        ],
        "summary": "Gets a list of expenses",
        "description": "Lists expenses, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the expenses, these are handled by the ExpenseFilters class which defines the methods available",
        "operationId": "getExpenses",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of expenses",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "expenses"
        ],
        "summary": "Adds a client",
        "description": "Adds an client to a company",
        "operationId": "storeExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{id}": {
      "get": {
        "tags": [
          "expenses"
        ],
        "summary": "Shows a client",
        "description": "Displays a client by id",
        "operationId": "showExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Expense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the expense object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "expenses"
        ],
        "summary": "Updates a client",
        "description": "Handles the updating of a client by id",
        "operationId": "updateExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Expense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "expenses"
        ],
        "summary": "Deletes a client",
        "description": "Handles the deletion of a client by id",
        "operationId": "deleteExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Expense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{id}/edit": {
      "get": {
        "tags": [
          "expenses"
        ],
        "summary": "Shows a client for editting",
        "description": "Displays a client by id",
        "operationId": "editExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Expense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/create": {
      "get": {
        "tags": [
          "expenses"
        ],
        "summary": "Gets a new blank client object",
        "description": "Returns a blank object with default values",
        "operationId": "getExpensesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/bulk": {
      "post": {
        "tags": [
          "expenses"
        ],
        "summary": "Performs bulk actions on an array of expenses",
        "description": "",
        "operationId": "bulkExpenses",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Expense User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{id}/upload": {
      "put": {
        "tags": [
          "expense"
        ],
        "summary": "Uploads a document to a expense",
        "description": "Handles the uploading of a document to a expense",
        "operationId": "uploadExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Expense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Expense object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/export": {
      "post": {
        "tags": [
          "export"
        ],
        "summary": "Export data from the system",
        "description": "Export data from the system",
        "operationId": "getExport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/group_settings": {
      "get": {
        "tags": [
          "group_settings"
        ],
        "summary": "Gets a list of group_settings",
        "description": "Lists group_settings, search and filters allow fine grained lists to be generated.\n\n        Query parameters can be added to performed more fine grained filtering of the group_settings, these are handled by the GroupSettingFilters class which defines the methods available",
        "operationId": "getGroupSettings",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of group_settings",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "group_settings"
        ],
        "summary": "Adds a GroupSetting",
        "description": "Adds an GroupSetting to the system",
        "operationId": "storeGroupSetting",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved GroupSetting object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/group_settings/create": {
      "get": {
        "tags": [
          "group_settings"
        ],
        "summary": "Gets a new blank GroupSetting object",
        "description": "Returns a blank object with default values",
        "operationId": "getGroupSettingsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank GroupSetting object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/group_settings/{id}": {
      "get": {
        "tags": [
          "group_settings"
        ],
        "summary": "Shows an GroupSetting",
        "description": "Displays an GroupSetting by id",
        "operationId": "showGroupSetting",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The GroupSetting Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the GroupSetting object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "group_settings"
        ],
        "summary": "Updates an GroupSetting",
        "description": "Handles the updating of an GroupSetting by id",
        "operationId": "updateGroupSetting",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The GroupSetting Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the GroupSetting object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "group_settings"
        ],
        "summary": "Deletes a GroupSetting",
        "description": "Handles the deletion of an GroupSetting by id",
        "operationId": "deleteGroupSetting",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The GroupSetting Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/group_settings/{id}/edit": {
      "get": {
        "tags": [
          "group_settings"
        ],
        "summary": "Shows an GroupSetting for editting",
        "description": "Displays an GroupSetting by id",
        "operationId": "editGroupSetting",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The GroupSetting Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the GroupSetting object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/group_settings/bulk": {
      "post": {
        "tags": [
          "group_settings"
        ],
        "summary": "Performs bulk actions on an array of group_settings",
        "description": "",
        "operationId": "bulkGroupSettings",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "An array of group_settings ids",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/group_settings/{id}/upload": {
      "put": {
        "tags": [
          "group_settings"
        ],
        "summary": "Uploads a document to a group setting",
        "description": "Handles the uploading of a document to a group setting",
        "operationId": "uploadGroupSetting",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Group Setting Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Group Setting object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/preimport": {
      "post": {
        "tags": [
          "imports"
        ],
        "summary": "Pre Import checks - returns a reference to the job and the headers of the CSV",
        "description": "Pre Import checks - returns a reference to the job and the headers of the CSV",
        "operationId": "preimport",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "description": "The CSV file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns a reference to the file",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/import_json": {
      "post": {
        "tags": [
          "import"
        ],
        "summary": "Import data from the system",
        "description": "Import data from the system",
        "operationId": "getImportJson",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apple/confirm_purchase": {
      "post": {
        "tags": [
          "postmark"
        ],
        "summary": "Processing webhooks from Apple for in app purchases",
        "description": "Adds an credit to the system",
        "operationId": "confirmApplePurchase",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apple/process_webhook": {
      "post": {
        "tags": [
          "postmark"
        ],
        "summary": "Processing event webhooks from Apple for in purchase / subscription status update",
        "description": "Adds an credit to the system",
        "operationId": "processAppleWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Gets a list of invoices",
        "description": "Lists invoices, search and filters allow fine grained lists to be generated.\n     *\n     *\t\tQuery parameters can be added to performed more fine grained filtering of the invoices, these are handled by the InvoiceFilters class which defines the methods available",
        "operationId": "getInvoices",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of invoices",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Adds a invoice",
        "description": "Adds an invoice to the system",
        "operationId": "storeInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FillableInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the saved invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/create": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Gets a new blank invoice object",
        "description": "Returns a blank object with default values",
        "operationId": "getInvoicesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Shows an invoice",
        "description": "Displays an invoice by id",
        "operationId": "showInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "invoices"
        ],
        "summary": "Updates an invoice",
        "description": "Handles the updating of an invoice by id",
        "operationId": "updateInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invoices"
        ],
        "summary": "Deletes a invoice",
        "description": "Handles the deletion of an invoice by id",
        "operationId": "deleteInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}/edit": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Shows an invoice for editting",
        "description": "Displays an invoice by id",
        "operationId": "editInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/bulk": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Performs bulk actions on an array of invoices",
        "description": "",
        "operationId": "bulkInvoices",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}/{action}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Performs a custom action on an invoice",
        "description": "Performs a custom action on an invoice.\n     *\n     *        The current range of actions are as follows\n     *        - clone_to_invoice\n     *        - clone_to_quote\n     *        - history\n     *        - delivery_note\n     *        - mark_paid\n     *        - download\n     *        - archive\n     *        - delete\n     *        - email",
        "operationId": "actionInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The action string to be performed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "clone_to_quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/{invitation_key}/download": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Download a specific invoice by invitation key",
        "description": "Downloads a specific invoice",
        "operationId": "downloadInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "invitation_key",
            "in": "path",
            "description": "The Invoice Invitation Key",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice pdf",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}/delivery_note": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Download a specific invoice delivery notes",
        "description": "Downloads a specific invoice delivery notes",
        "operationId": "deliveryNote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hahsed Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice delivery note pdf",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}/upload": {
      "put": {
        "tags": [
          "invoices"
        ],
        "summary": "Uploads a document to a invoice",
        "description": "Handles the uploading of a document to a invoice",
        "operationId": "uploadInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Invoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim_license": {
      "get": {
        "tags": [
          "claim_license"
        ],
        "summary": "Attempts to claim a white label license",
        "description": "Attempts to claim a white label license",
        "operationId": "getClaimLicense",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "license_key",
            "in": "query",
            "description": "The license hash",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "d87sh-s755s-s7d76-sdsd8"
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "The ID of the product purchased.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/logout": {
      "post": {
        "tags": [
          "logout"
        ],
        "summary": "Gets a list of logout",
        "description": "Lists all logout",
        "operationId": "getLogout",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success message",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/migration/purge/{company}": {
      "post": {
        "tags": [
          "migration"
        ],
        "summary": "Attempts to purge a company record and all its child records",
        "description": "Attempts to purge a company record and all its child records",
        "operationId": "postPurgeCompany",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "company",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/migration/purge_save_settings/{company}": {
      "post": {
        "tags": [
          "migration"
        ],
        "summary": "Attempts to purge a companies child records but save the company record and its settings",
        "description": "Attempts to purge a companies child records but save the company record and its settings",
        "operationId": "postPurgeCompanySaveSettings",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "company",
            "in": "path",
            "description": "The Company Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/migration/start": {
      "post": {
        "tags": [
          "migration"
        ],
        "summary": "Starts the migration from previous version of Invoice Ninja",
        "description": "Starts the migration from previous version of Invoice Ninja",
        "operationId": "postStartMigration",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "X-Api-Password",
            "in": "header",
            "description": "The login password when challenged",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "supersecretpassword"
            }
          },
          {
            "name": "migration",
            "in": "query",
            "description": "The migraton file",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "object",
              "format": "file"
            },
            "example": "migration.zip"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/one_time_token": {
      "post": {
        "tags": [
          "one_time_token"
        ],
        "summary": "Attempts to create a one time token",
        "description": "Attempts to create a one time token",
        "operationId": "oneTimeToken",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Company User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Gets a list of payments",
        "description": "Lists payments, search and filters allow fine grained lists to be generated.\n\n        Query parameters can be added to performed more fine grained filtering of the payments, these are handled by the PaymentFilters class which defines the methods available",
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of payments",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Adds a Payment",
        "description": "Adds an Payment to the system",
        "operationId": "storePayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "description": "The payment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the saved Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/create": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Gets a new blank Payment object",
        "description": "Returns a blank object with default values",
        "operationId": "getPaymentsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{id}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Shows an Payment",
        "description": "Displays an Payment by id",
        "operationId": "showPayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Updates an Payment",
        "description": "Handles the updating of an Payment by id",
        "operationId": "updatePayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "payments"
        ],
        "summary": "Deletes a Payment",
        "description": "Handles the deletion of an Payment by id",
        "operationId": "deletePayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{id}/edit": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Shows an Payment for editting",
        "description": "Displays an Payment by id",
        "operationId": "editPayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/bulk": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Performs bulk actions on an array of payments",
        "description": "",
        "operationId": "bulkPayments",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Payment response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{id}/{action}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Performs a custom action on an Payment",
        "description": "Performs a custom action on an Payment.\n\n    The current range of actions are as follows\n    - clone_to_Payment\n    - clone_to_quote\n    - history\n    - delivery_note\n    - mark_paid\n    - download\n    - archive\n    - delete\n    - email",
        "operationId": "actionPayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The action string to be performed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "clone_to_quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/refund": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Adds a Refund",
        "description": "Adds an Refund to the system",
        "operationId": "storeRefund",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "description": "The refund request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the saved Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{id}/upload": {
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Uploads a document to a payment",
        "description": "Handles the uploading of a document to a payment",
        "operationId": "uploadPayment",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_terms": {
      "get": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Gets a list of payment terms",
        "description": "Lists payment terms",
        "operationId": "getPaymentTerms",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of payment terms",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTerm"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Adds a Payment",
        "description": "Adds a Payment Term to the system",
        "operationId": "storePaymentTerm",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "description": "The payment_terms request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTerm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the saved Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTerm"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_terms/create": {
      "get": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Gets a new blank PaymentTerm object",
        "description": "Returns a blank object with default values",
        "operationId": "getPaymentTermsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank PaymentTerm object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_terms/{id}": {
      "get": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Shows a Payment Term",
        "description": "Displays an Payment Term by id",
        "operationId": "showPaymentTerm",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Term Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment Term object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTerm"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Updates a Payment Term",
        "description": "Handles the updating of an Payment Termby id",
        "operationId": "updatePaymentTerm",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Term Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment Term object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTerm"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "payment_termss"
        ],
        "summary": "Deletes a Payment Term",
        "description": "Handles the deletion of an PaymentTerm by id",
        "operationId": "deletePaymentTerm",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Term Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_terms/{id}/edit": {
      "get": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Shows an Payment Term for editting",
        "description": "Displays an Payment Term by id",
        "operationId": "editPaymentTerms",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Payment Term Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Payment object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTerm"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_terms/bulk": {
      "post": {
        "tags": [
          "payment_terms"
        ],
        "summary": "Performs bulk actions on an array of payment terms",
        "description": "",
        "operationId": "bulkPaymentTerms",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Payment Ter,s",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Payment Terms response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTerm"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "summary": "Attempts to ping the API",
        "description": "Attempts to ping the API",
        "operationId": "getPing",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The company and user name",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          }
        }
      }
    },
    "/api/v1/health_check": {
      "get": {
        "tags": [
          "health_check"
        ],
        "summary": "Attempts to get a health check from the API",
        "description": "Attempts to get a health check from the API",
        "operationId": "getHealthCheck",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A key/value map of the system health",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          }
        }
      }
    },
    "/api/v1/postmark_webhook": {
      "post": {
        "tags": [
          "postmark"
        ],
        "summary": "Processing webhooks from PostMark",
        "description": "Adds an credit to the system",
        "operationId": "postmarkWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved credit object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/preview": {
      "post": {
        "tags": [
          "preview"
        ],
        "summary": "Returns a pdf preview",
        "description": "Returns a pdf preview.",
        "operationId": "getPreview",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The pdf response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/preview/purchase_order": {
      "post": {
        "tags": [
          "preview"
        ],
        "summary": "Returns a pdf preview for purchase order",
        "description": "Returns a pdf preview for purchase order.",
        "operationId": "getPreviewPurchaseOrder",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The pdf response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Gets a list of products",
        "description": "Lists products, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the products, these are handled by the ProductFilters class which defines the methods available",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Adds a Product",
        "description": "Adds an Product to the system",
        "operationId": "storeProduct",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved Product object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/create": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Gets a new blank Product object",
        "description": "Returns a blank object with default values",
        "operationId": "getProductsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank Product object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Shows an Product",
        "description": "Displays an Product by id",
        "operationId": "showProduct",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Product Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Product object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Updates an Product",
        "description": "Handles the updating of an Product by id",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Product Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Product object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Deletes a Product",
        "description": "Handles the deletion of an Product by id",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Product Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}/edit": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Shows an Product for editting",
        "description": "Displays an Product by id",
        "operationId": "editProduct",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Product Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Product object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/bulk": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Performs bulk actions on an array of products",
        "description": "",
        "operationId": "bulkProducts",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Hashed IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Product response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}/upload": {
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Uploads a document to a product",
        "description": "Handles the uploading of a document to a product",
        "operationId": "uploadProduct",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Product Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Product object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Gets a list of projects",
        "description": "Lists projects",
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Adds a project",
        "description": "Adds an project to a company",
        "operationId": "storeProject",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved project object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Shows a project",
        "description": "Displays a project by id",
        "operationId": "showProject",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Project Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the expense object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Updates a project",
        "description": "Handles the updating of a project by id",
        "operationId": "updateProject",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Project Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the project object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Deletes a project",
        "description": "Handles the deletion of a project by id",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Project Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}/edit": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Shows a project for editting",
        "description": "Displays a project by id",
        "operationId": "editProject",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Project Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the project object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/create": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Gets a new blank project object",
        "description": "Returns a blank object with default values",
        "operationId": "getProjectsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank project object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/bulk": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Performs bulk actions on an array of projects",
        "description": "",
        "operationId": "bulkProjects",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Project User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}/upload": {
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Uploads a document to a project",
        "description": "Handles the uploading of a document to a project",
        "operationId": "uploadProject",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Project Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Project object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders": {
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Gets a list of purchase orders",
        "description": "Lists purchase orders, search and filters allow fine grained lists to be generated.\n     *\n     *      Query parameters can be added to performed more fine grained filtering of the purchase orders, these are handled by the PurchaseOrderFilters class which defines the methods available",
        "operationId": "getPurchaseOrders",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of purchase orders",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "purhcase_orders"
        ],
        "summary": "Adds a purchase order",
        "description": "Adds an purchase order to the system",
        "operationId": "storePurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved purchase order object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/create": {
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Gets a new blank purchase order object",
        "description": "Returns a blank object with default values",
        "operationId": "getPurchaseOrderCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank purchase order object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/{id}": {
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Shows an purcase orders",
        "description": "Displays an purchase order by id",
        "operationId": "showPurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Purchase order Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the purchase order object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Deletes a purchase order",
        "description": "Handles the deletion of an purchase orders by id",
        "operationId": "deletePurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The purhcase order Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/{id}/edit": {
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Shows an purchase order for editting",
        "description": "Displays an purchase order by id",
        "operationId": "editPurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The purchase order Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the purchase order object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_order/{id}": {
      "put": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Updates an purchase order",
        "description": "Handles the updating of an purchase order by id",
        "operationId": "updatePurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The purchase order Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the purchase order object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credit"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/bulk": {
      "post": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Performs bulk actions on an array of purchase_orders",
        "description": "",
        "operationId": "bulkPurchaseOrderss",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Purchase Order IDS",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Bulk Action response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/{id}/{action}": {
      "get": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Performs a custom action on an purchase order",
        "description": "Performs a custom action on an purchase order.\n     *\n     *        The current range of actions are as follows\n     *        - mark_paid\n     *        - download\n     *        - archive\n     *        - delete\n     *        - email",
        "operationId": "actionPurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Purchase Order Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The action string to be performed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "clone_to_quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase_orders/{id}/upload": {
      "put": {
        "tags": [
          "purchase_orders"
        ],
        "summary": "Uploads a document to a purchase_orders",
        "description": "Handles the uploading of a document to a purchase_order",
        "operationId": "uploadPurchaseOrder",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Purchase Order Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Purchase Order object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Gets a list of quotes",
        "description": "Lists quotes, search and filters allow fine grained lists to be generated.\n     *\n     *      Query parameters can be added to performed more fine grained filtering of the quotes, these are handled by the QuoteFilters class which defines the methods available",
        "operationId": "getQuotes",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of quotes",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "quotes"
        ],
        "summary": "Adds a Quote",
        "description": "Adds an Quote to the system",
        "operationId": "storeQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/create": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Gets a new blank Quote object",
        "description": "Returns a blank object with default values",
        "operationId": "getQuotesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{id}": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Shows an Quote",
        "description": "Displays an Quote by id",
        "operationId": "showQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Quote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "quotes"
        ],
        "summary": "Updates an Quote",
        "description": "Handles the updating of an Quote by id",
        "operationId": "updateQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Quote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "quotes"
        ],
        "summary": "Deletes a Quote",
        "description": "Handles the deletion of an Quote by id",
        "operationId": "deleteQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Quote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{id}/edit": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Shows an Quote for editting",
        "description": "Displays an Quote by id",
        "operationId": "editQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Quote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/bulk": {
      "post": {
        "tags": [
          "quotes"
        ],
        "summary": "Performs bulk actions on an array of quotes",
        "description": "",
        "operationId": "bulkQuotes",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Hashed ids",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Quote response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{id}/{action}": {
      "get": {
        "tags": [
          "quotes"
        ],
        "summary": "Performs a custom action on an Quote",
        "description": "Performs a custom action on an Quote.\n\n    The current range of actions are as follows\n    - clone_to_quote\n    - history\n    - delivery_note\n    - mark_paid\n    - download\n    - archive\n    - delete\n    - convert\n    - convert_to_invoice\n    - email",
        "operationId": "actionQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Quote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The action string to be performed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "clone_to_quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{id}/upload": {
      "put": {
        "tags": [
          "quotes"
        ],
        "summary": "Uploads a document to a quote",
        "description": "Handles the uploading of a document to a quote",
        "operationId": "uploadQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Quote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Quote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_expenses": {
      "get": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Gets a list of recurring_expenses",
        "description": "Lists recurring_expenses, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the recurring_expenses, these are handled by the RecurringExpenseFilters class which defines the methods available",
        "operationId": "getRecurringExpenses",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recurring_expenses",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Adds a client",
        "description": "Adds an client to a company",
        "operationId": "storeRecurringExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_expenses/{id}": {
      "get": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Shows a client",
        "description": "Displays a client by id",
        "operationId": "showRecurringExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringExpense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the recurring_expense object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Updates a client",
        "description": "Handles the updating of a client by id",
        "operationId": "updateRecurringExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringExpense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Deletes a client",
        "description": "Handles the deletion of a client by id",
        "operationId": "deleteRecurringExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringExpense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_expenses/{id}/edit": {
      "get": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Shows a client for editting",
        "description": "Displays a client by id",
        "operationId": "editRecurringExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringExpense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_expenses/create": {
      "get": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Gets a new blank client object",
        "description": "Returns a blank object with default values",
        "operationId": "getRecurringExpensesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_expenses/bulk": {
      "post": {
        "tags": [
          "recurring_expenses"
        ],
        "summary": "Performs bulk actions on an array of recurring_expenses",
        "description": "",
        "operationId": "bulkRecurringExpenses",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The RecurringExpense User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_expenses/{id}/upload": {
      "put": {
        "tags": [
          "recurring_expense"
        ],
        "summary": "Uploads a document to a recurring_expense",
        "description": "Handles the uploading of a document to a recurring_expense",
        "operationId": "uploadRecurringExpense",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringExpense Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringExpense object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices": {
      "get": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Gets a list of recurring_invoices",
        "description": "Lists recurring_invoices, search and filters allow fine grained lists to be generated.\n\n        Query parameters can be added to performed more fine grained filtering of the recurring_invoices, these are handled by the RecurringInvoiceFilters class which defines the methods available",
        "operationId": "getRecurringInvoices",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recurring_invoices",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Adds a RecurringInvoice",
        "description": "Adds an RecurringInvoice to the system",
        "operationId": "storeRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices/create": {
      "get": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Gets a new blank RecurringInvoice object",
        "description": "Returns a blank object with default values",
        "operationId": "getRecurringInvoicesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices/{id}": {
      "get": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Shows an RecurringInvoice",
        "description": "Displays an RecurringInvoice by id",
        "operationId": "showRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringInvoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Updates an RecurringInvoice",
        "description": "Handles the updating of an RecurringInvoice by id",
        "operationId": "updateRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringInvoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Deletes a RecurringInvoice",
        "description": "Handles the deletion of an RecurringInvoice by id",
        "operationId": "deleteRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringInvoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices/{id}/edit": {
      "get": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Shows an RecurringInvoice for editting",
        "description": "Displays an RecurringInvoice by id",
        "operationId": "editRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringInvoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoice/{invitation_key}/download": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Download a specific invoice by invitation key",
        "description": "Downloads a specific invoice",
        "operationId": "downloadRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "invitation_key",
            "in": "path",
            "description": "The Recurring Invoice Invitation Key",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the recurring invoice pdf",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices/bulk": {
      "post": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Performs bulk actions on an array of recurring_invoices",
        "description": "",
        "operationId": "bulkRecurringInvoices",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Hashed IDs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The RecurringInvoice response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices/{id}/{action}": {
      "get": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Performs a custom action on an RecurringInvoice",
        "description": "Performs a custom action on an RecurringInvoice.\n\n    The current range of actions are as follows\n    - clone_to_RecurringInvoice\n    - clone_to_quote\n    - history\n    - delivery_note\n    - mark_paid\n    - download\n    - archive\n    - delete\n    - email",
        "operationId": "actionRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringInvoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The action string to be performed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "clone_to_quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_invoices/{id}/upload": {
      "put": {
        "tags": [
          "recurring_invoices"
        ],
        "summary": "Uploads a document to a recurring_invoice",
        "description": "Handles the uploading of a document to a recurring_invoice",
        "operationId": "uploadRecurringInvoice",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringInvoice Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringInvoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_quotes": {
      "get": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Gets a list of recurring_quotes",
        "description": "Lists recurring_quotes, search and filters allow fine grained lists to be generated.\n\n        Query parameters can be added to performed more fine grained filtering of the recurring_quotes, these are handled by the RecurringQuoteFilters class which defines the methods available",
        "operationId": "getRecurringQuotes",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recurring_quotes",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Adds a RecurringQuote",
        "description": "Adds an RecurringQuote to the system",
        "operationId": "storeRecurringQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved RecurringQuote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_quotes/create": {
      "get": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Gets a new blank RecurringQuote object",
        "description": "Returns a blank object with default values",
        "operationId": "getRecurringQuotesCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank RecurringQuote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_quotes/{id}": {
      "get": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Shows an RecurringQuote",
        "description": "Displays an RecurringQuote by id",
        "operationId": "showRecurringQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringQuote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringQuote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Updates an RecurringQuote",
        "description": "Handles the updating of an RecurringQuote by id",
        "operationId": "updateRecurringQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringQuote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringQuote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Deletes a RecurringQuote",
        "description": "Handles the deletion of an RecurringQuote by id",
        "operationId": "deleteRecurringQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringQuote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_quotes/{id}/edit": {
      "get": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Shows an RecurringQuote for editting",
        "description": "Displays an RecurringQuote by id",
        "operationId": "editRecurringQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringQuote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringQuote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_quotes/bulk": {
      "post": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Performs bulk actions on an array of recurring_quotes",
        "description": "",
        "operationId": "bulkRecurringQuotes",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Hashed ids",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The RecurringQuote response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recurring_quotes/{id}/{action}": {
      "get": {
        "tags": [
          "recurring_quotes"
        ],
        "summary": "Performs a custom action on an RecurringQuote",
        "description": "Performs a custom action on an RecurringQuote.\n\n    The current range of actions are as follows\n    - clone_to_RecurringQuote\n    - clone_to_quote\n    - history\n    - delivery_note\n    - mark_paid\n    - download\n    - archive\n    - delete\n    - email",
        "operationId": "actionRecurringQuote",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The RecurringQuote Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          },
          {
            "name": "action",
            "in": "path",
            "description": "The action string to be performed",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "clone_to_quote"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the RecurringQuote object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringQuote"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/contacts": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Contact reports",
        "description": "Export contact reports",
        "operationId": "getContactReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/clients": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Client reports",
        "description": "Export client reports",
        "operationId": "getClientReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/credit": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Credit reports",
        "description": "Export credit reports",
        "operationId": "getCreditReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/documents": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Document reports",
        "description": "Export document reports",
        "operationId": "getDocumentReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/expense": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Expense reports",
        "description": "Export expense reports",
        "operationId": "getExpenseReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/invoice_items": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Invoice item reports",
        "description": "Export invoice item reports",
        "operationId": "getInvoiceItemReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/invoices": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Invoice reports",
        "description": "Export invoice reports",
        "operationId": "getInvoiceReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/payments": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Payment reports",
        "description": "Export payment reports",
        "operationId": "getPaymentReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/products": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Product reports",
        "description": "Export product reports",
        "operationId": "getProductReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/product_sales": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Product Salesreports",
        "description": "Export product sales reports",
        "operationId": "getProductSalesReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/profitloss": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Profit loss reports",
        "description": "Profit loss report",
        "operationId": "getProfitLossReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/quote_items": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Quote item reports",
        "description": "Export Quote item reports",
        "operationId": "getQuoteItemReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/quotes": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Quote reports",
        "description": "Export quote reports",
        "operationId": "getQuoteReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/recurring_invoices": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Recurring Invoice reports",
        "description": "Export recurring invoice reports",
        "operationId": "getRecurringInvoiceReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/tasks": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Task reports",
        "description": "Export task reports",
        "operationId": "getTaskReport",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericReportSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/self-update": {
      "post": {
        "tags": [
          "update"
        ],
        "summary": "Performs a system update",
        "description": "Performs a system update",
        "operationId": "selfUpdate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Api-Password",
            "in": "header",
            "description": "The login password when challenged",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "supersecretpassword"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success/failure response"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statics": {
      "get": {
        "tags": [
          "statics"
        ],
        "summary": "Gets a list of statics",
        "description": "Lists all statics",
        "operationId": "getStatics",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of static data",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Gets a list of subscriptions",
        "description": "Lists subscriptions.",
        "operationId": "getSubscriptions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of subscriptions",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Adds a subscriptions",
        "description": "Adds an subscriptions to the system",
        "operationId": "storeSubscription",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved subscriptions object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/create": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Gets a new blank subscriptions object",
        "description": "Returns a blank object with default values",
        "operationId": "getSubscriptionsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank subscriptions object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{id}": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Shows an subscriptions",
        "description": "Displays an subscriptions by id",
        "operationId": "showSubscription",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Subscription Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Subscription object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Updates an subscriptions",
        "description": "Handles the updating of an subscriptions by id",
        "operationId": "updateSubscription",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Subscription Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the subscriptions object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Deletes a subscriptions",
        "description": "Handles the deletion of an subscriptions by id",
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Subscription Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{id}/edit": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Shows an subscriptions for editting",
        "description": "Displays an subscriptions by id",
        "operationId": "editSubscription",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Subscription Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/bulk": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Performs bulk actions on an array of subscriptions",
        "description": "",
        "operationId": "bulkSubscriptions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Subscription response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/support/messages/send": {
      "post": {
        "tags": [
          "support"
        ],
        "summary": "Sends a support message to Invoice Ninja team",
        "description": "Allows a user to send a support message to the Invoice Ninja Team",
        "operationId": "supportMessage",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "description": "The message",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/messages_send_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Server response",
                    "example": "true"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system_logs": {
      "get": {
        "tags": [
          "system_logs"
        ],
        "summary": "Gets a list of system logs",
        "description": "Lists system logs, search and filters allow fine grained lists to be generated.\n     *\n     *      Query parameters can be added to performed more fine grained filtering of the system logs, these are handled by the SystemLogFilters class which defines the methods available",
        "operationId": "getSystemLogs",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of system logs",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system_logs/{id}": {
      "get": {
        "tags": [
          "system_logs"
        ],
        "summary": "Shows a system_logs",
        "description": "Displays a system_logs by id",
        "operationId": "showSystemLogs",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The system_logs Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the system_logs object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemLog"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Gets a list of tasks",
        "description": "Lists tasks, search and filters allow fine grained lists to be generated.\n     *\n     *   Query parameters can be added to performed more fine grained filtering of the tasks, these are handled by the TaskFilters class which defines the methods available",
        "operationId": "getTasks",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tasks",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Adds a client",
        "description": "Adds an client to a company",
        "operationId": "storeTask",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Shows a client",
        "description": "Displays a client by id",
        "operationId": "showTask",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Task Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the task object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Updates a client",
        "description": "Handles the updating of a client by id",
        "operationId": "updateTask",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Task Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Deletes a client",
        "description": "Handles the deletion of a client by id",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Task Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}/edit": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Shows a client for editting",
        "description": "Displays a client by id",
        "operationId": "editTask",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Task Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/create": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Gets a new blank client object",
        "description": "Returns a blank object with default values",
        "operationId": "getTasksCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/bulk": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Performs bulk actions on an array of tasks",
        "description": "",
        "operationId": "bulkTasks",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Task User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}/upload": {
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Uploads a document to a task",
        "description": "Handles the uploading of a document to a task",
        "operationId": "uploadTask",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Task Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Task object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/stort": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Sort tasks on KanBan",
        "description": "Sorts tasks after drag and drop on the KanBan.",
        "operationId": "sortTasks",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an Ok, 200 HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_schedulers/": {
      "get": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Task Scheduler Index",
        "description": "Get all schedulers with associated jobs",
        "operationId": "getTaskSchedulers",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Create task scheduler with job ",
        "description": "Create task scheduler with a job (action(job) request should be sent via request also. Example: We want client report to be job which will be run\n     * multiple times, we should send the same parameters in the request as we would send if we wanted to get report, see example",
        "operationId": "createTaskScheduler",
        "parameters": [
          {
            "name": "X-Api-Secret",
            "in": "header",
            "description": "The API secret as defined by the .env variable API_SECRET",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "password"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskSchedulerSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/task_schedulers": {
      "get": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Gets a new blank scheduler object",
        "description": "Returns a blank object with default values",
        "operationId": "getTaskScheduler",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank scheduler object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSchedulerSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_schedulers/{id}": {
      "get": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Show given scheduler",
        "description": "Get scheduler with associated job",
        "operationId": "showTaskScheduler",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Scheduler Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Update task scheduler ",
        "description": "Update task scheduler",
        "operationId": "updateTaskScheduler",
        "parameters": [
          {
            "name": "X-Api-Secret",
            "in": "header",
            "description": "The API secret as defined by the .env variable API_SECRET",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "password"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Scheduler Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskSchedulerSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Destroy Task Scheduler",
        "description": "Destroy task scheduler and its associated job",
        "operationId": "destroyTaskScheduler",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Scheduler Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_schedulers/bulk": {
      "post": {
        "tags": [
          "task_schedulers"
        ],
        "summary": "Performs bulk actions on an array of task_schedulers",
        "description": "",
        "operationId": "bulkTaskSchedulerActions",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "array of ids",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The TaskSchedule response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSchedulerSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_statuses": {
      "get": {
        "tags": [
          "task_status"
        ],
        "summary": "Gets a list of task statuses",
        "description": "Lists task statuses",
        "operationId": "getTaskStatuses",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of task statuses",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "task_status"
        ],
        "summary": "Adds a TaskStatus",
        "description": "Adds a TaskStatusto the system",
        "operationId": "storeTaskStatus",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "requestBody": {
          "description": "The task_status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the saved TaskStatus object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_statuses/create": {
      "get": {
        "tags": [
          "task_status"
        ],
        "summary": "Gets a new blank TaskStatus object",
        "description": "Returns a blank object with default values",
        "operationId": "getTaskStatussCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank TaskStatus object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_statuses/{id}": {
      "get": {
        "tags": [
          "task_status"
        ],
        "summary": "Shows a TaskStatus Term",
        "description": "Displays an TaskStatusby id",
        "operationId": "showTaskStatus",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaskStatusHashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the TaskStatusobject",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "task_status"
        ],
        "summary": "Updates a TaskStatus Term",
        "description": "Handles the updating of an TaskStatus Termby id",
        "operationId": "updateTaskStatus",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaskStatusHashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the TaskStatusobject",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "task_statuss"
        ],
        "summary": "Deletes a TaskStatus Term",
        "description": "Handles the deletion of an TaskStatus by id",
        "operationId": "deleteTaskStatus",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaskStatusHashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_statuses/{id}/edit": {
      "get": {
        "tags": [
          "task_status"
        ],
        "summary": "Shows an TaskStatusfor editting",
        "description": "Displays an TaskStatusby id",
        "operationId": "editTaskStatuss",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaskStatusHashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the TaskStatus object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task_statuses/bulk": {
      "post": {
        "tags": [
          "task_status"
        ],
        "summary": "Performs bulk actions on an array of task statuses",
        "description": "",
        "operationId": "bulkTaskStatuss",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "TaskStatus Ter,s",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The TaskStatus Terms response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tax_rates": {
      "get": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Gets a list of tax_rates",
        "description": "Lists tax rates",
        "operationId": "getTaxRates",
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tax_rates",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tax_rates/create": {
      "get": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Gets a new blank Tax Rate object",
        "description": "Returns a blank object with default values",
        "operationId": "getTaxRateCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank Tax Rate object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tax_rates/{id}": {
      "get": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Shows a Tax Rate",
        "description": "Displays an TaxRate by id",
        "operationId": "showTaxRate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaxRate Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Tax Rate object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Updates a tax rate",
        "description": "Handles the updating of a tax rate by id",
        "operationId": "updateTaxRate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaxRate Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the TaxRate object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Deletes a TaxRate",
        "description": "Handles the deletion of an TaxRate by id",
        "operationId": "deleteTaxRate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaxRate Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tax_rates/{id}/edit": {
      "get": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Shows a Tax Rate for editting",
        "description": "Displays a Tax Rate by id",
        "operationId": "editTaxRate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The TaxRate Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Tax Rate object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tax_rates/bulk": {
      "post": {
        "tags": [
          "tax_rates"
        ],
        "summary": "Performs bulk actions on an array of TaxRates",
        "description": "",
        "operationId": "bulkTaxRates",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Tax Rates",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The TaxRate List response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Returns a entity template with the template variables replaced with the Entities",
        "description": "Returns a entity template with the template variables replaced with the Entities",
        "operationId": "getShowTemplate",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "requestBody": {
          "description": "The template subject and body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1_templates_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The template response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tokens": {
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "Gets a list of company tokens",
        "description": "Lists company tokens.\n     *\n     *   Query parameters can be added to performed more fine grained filtering of the tokens, these are handled by the TokenFilters class which defines the methods available",
        "operationId": "getTokens",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tokens",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Adds a token",
        "description": "Adds an token to a company",
        "operationId": "storeToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved token object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tokens/{id}": {
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "Shows a token",
        "description": "Displays a token by id",
        "operationId": "showToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Token Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the token object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tokens"
        ],
        "summary": "Updates a token",
        "description": "Handles the updating of a token by id",
        "operationId": "updateToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Token Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the token object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tokens"
        ],
        "summary": "Deletes a token",
        "description": "Handles the deletion of a token by id",
        "operationId": "deleteToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Token Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tokens/{id}/edit": {
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "Shows a token for editting",
        "description": "Displays a token by id",
        "operationId": "editToken",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Token Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the token object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tokens/create": {
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "Gets a new blank token object",
        "description": "Returns a blank object with default values",
        "operationId": "getTokensCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank token object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tokens/bulk": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Performs bulk actions on an array of tokens",
        "description": "",
        "operationId": "bulkTokens",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Token ids",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Token response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Gets a list of users",
        "description": "Lists users, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the users, these are handled by the UserFilters class which defines the methods available",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Adds a User",
        "description": "Adds an User to the system",
        "operationId": "storeUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved User object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/create": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Gets a new blank User object",
        "description": "Returns a blank object with default values",
        "operationId": "getUsersCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank User object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Shows an User",
        "description": "Displays an User by id",
        "operationId": "showUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The User Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the User object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Updates an User",
        "description": "Handles the updating of an User by id",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The User Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the User object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a User",
        "description": "Handles the deletion of an User by id",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "token_name",
            "in": "query",
            "description": "Customized name for the Users API Token",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "iOS Device 11 iPad"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The User Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/edit": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Shows an User for editting",
        "description": "Displays an User by id",
        "operationId": "editUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The User Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the User object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/bulk": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Performs bulk actions on an array of users",
        "description": "",
        "operationId": "bulkUsers",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "Hashed ids",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user}/detach_from_company": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Detach an existing user to a company",
        "description": "Detach an existing user from a company",
        "operationId": "detachUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "The user hashed_id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "FD767dfd7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user}/invite": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Reconfirm an existing user to a company",
        "description": "Reconfirm an existing user from a company",
        "operationId": "inviteUser",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "The user hashed_id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "FD767dfd7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user}/reconfirm": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Reconfirm an existing user to a company",
        "description": "Reconfirm an existing user from a company",
        "operationId": "inviteUserReconfirm",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "The user hashed_id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "FD767dfd7"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "tags": [
          "vendors"
        ],
        "summary": "Gets a list of vendors",
        "description": "Lists vendors, search and filters allow fine grained lists to be generated.\n\n    Query parameters can be added to performed more fine grained filtering of the vendors, these are handled by the VendorFilters class which defines the methods available",
        "operationId": "getVendors",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of vendors",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vendors"
        ],
        "summary": "Adds a client",
        "description": "Adds an client to a company",
        "operationId": "storeVendor",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/{id}": {
      "get": {
        "tags": [
          "vendors"
        ],
        "summary": "Shows a client",
        "description": "Displays a client by id",
        "operationId": "showVendor",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Vendor Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the vendor object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "vendors"
        ],
        "summary": "Updates a client",
        "description": "Handles the updating of a client by id",
        "operationId": "updateVendor",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Vendor Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vendors"
        ],
        "summary": "Deletes a client",
        "description": "Handles the deletion of a client by id",
        "operationId": "deleteVendor",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Vendor Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/{id}/edit": {
      "get": {
        "tags": [
          "vendors"
        ],
        "summary": "Shows a client for editting",
        "description": "Displays a client by id",
        "operationId": "editVendor",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Vendor Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/create": {
      "get": {
        "tags": [
          "vendors"
        ],
        "summary": "Gets a new blank client object",
        "description": "Returns a blank object with default values",
        "operationId": "getVendorsCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank client object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/bulk": {
      "post": {
        "tags": [
          "vendors"
        ],
        "summary": "Performs bulk actions on an array of vendors",
        "description": "",
        "operationId": "bulkVendors",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Vendor User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/{id}/upload": {
      "put": {
        "tags": [
          "vendors"
        ],
        "summary": "Uploads a document to a vendor",
        "description": "Handles the uploading of a document to a vendor",
        "operationId": "uploadVendor",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Vendor Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Vendor object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webcron": {
      "get": {
        "tags": [
          "webcron"
        ],
        "summary": "Executes the task scheduler via a webcron service",
        "description": "Executes the task scheduler via a webcron service",
        "operationId": "webcron",
        "parameters": [
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Gets a list of Webhooks",
        "description": "Lists Webhooks, search and filters allow fine grained lists to be generated.\n     *\n     *      Query parameters can be added to performed more fine grained filtering of the Webhooks, these are handled by the WebhookFilters class which defines the methods available",
        "operationId": "getWebhooks",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Webhooks",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Adds a Webhook",
        "description": "Adds an Webhook to a company",
        "operationId": "storeWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the saved Webhook object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Shows a Webhook",
        "description": "Displays a Webhook by id",
        "operationId": "showWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Webhook Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Webhook object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "summary": "Updates a Webhook",
        "description": "Handles the updating of a Webhook by id",
        "operationId": "updateWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Webhook Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Webhook object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Deletes a Webhook",
        "description": "Handles the deletion of a Webhook by id",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Webhook Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a HTTP status",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/{id}/edit": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Shows a Webhook for editting",
        "description": "Displays a Webhook by id",
        "operationId": "editWebhook",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Webhook Hashed ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "string"
            },
            "example": "D2J234DFA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Webhook object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/create": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Gets a new blank Webhook object",
        "description": "Returns a blank object with default values",
        "operationId": "getWebhooksCreate",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes child relationships in the response, format is comma separated",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "clients,invoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A blank Webhook object",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/bulk": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Performs bulk actions on an array of Webhooks",
        "description": "",
        "operationId": "bulkWebhooks",
        "parameters": [
          {
            "name": "X-Api-Token",
            "in": "header",
            "description": "The API token to be used for authentication",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
            }
          },
          {
            "name": "X-Requested-With",
            "in": "header",
            "description": "Used to send the XMLHttpRequest header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "readOnly": true,
              "example": "XMLHttpRequest"
            }
          },
          {
            "name": "index",
            "in": "query",
            "description": "Replaces the default response index from data to a user specific string",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user"
            }
          }
        ],
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Array of hashed IDs to be bulk 'actioned"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Webhook User response",
            "headers": {
              "X-MINIMUM-CLIENT-VERSION": {
                "$ref": "#/components/headers/X-MINIMUM-CLIENT-VERSION"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account hashed id",
            "example": "AS3df3A"
          }
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id field of the activity",
            "example": "Opnel5aKBz"
          },
          "activity_type_id": {
            "type": "string",
            "description": "The activity type id",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "Opnel5aKBz"
          },
          "invoice_id": {
            "type": "string",
            "description": "The invoice hashed id",
            "example": "Opnel5aKBz"
          },
          "payment_id": {
            "type": "string",
            "description": "The payment hashed id",
            "example": "Opnel5aKBz"
          },
          "credit_id": {
            "type": "string",
            "description": "The credit hashed id",
            "example": "Opnel5aKBz"
          },
          "updated_at": {
            "type": "integer",
            "description": "Unixtimestamp the last time the record was updated",
            "example": 343421434
          },
          "expense_id": {
            "type": "string",
            "description": "The expense hashed id",
            "example": "Opnel5aKBz"
          },
          "is_system": {
            "type": "boolean",
            "description": "Defines is the activity was performed by the system",
            "example": true
          },
          "contact_id": {
            "type": "string",
            "description": "The contact hashed id",
            "example": "Opnel5aKBz"
          },
          "task_id": {
            "type": "string",
            "description": "The task hashed id",
            "example": "Opnel5aKBz"
          },
          "notes": {
            "type": "string",
            "description": "Activity Notes",
            "example": "Opnel5aKBz"
          },
          "token_id": {
            "type": "string",
            "description": "The hashed ID of the token who performed the action",
            "example": "Opnel5aKBz"
          },
          "ip": {
            "type": "string",
            "description": "The IP Address of the user who performed the action",
            "example": "192.168.1.252"
          }
        }
      },
      "BTRules": {
        "type": "object",
        "properties": {
          "data_key": {
            "type": "string",
            "description": "The key to search",
            "example": "description,amount"
          },
          "operator": {
            "type": "string",
            "description": "The operator flag of the search",
            "example": ">"
          },
          "value": {
            "type": "string",
            "description": "The value to search for",
            "example": "bob"
          }
        }
      },
      "BankIntegration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The bank integration hashed id",
            "example": "AS3df3A"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "AS3df3A"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "AS3df3A"
          },
          "provider_bank_name": {
            "type": "string",
            "description": "The providers bank name",
            "example": "Chase Bank"
          },
          "bank_account_id": {
            "type": "integer",
            "description": "The bank account id",
            "example": 1233434
          },
          "bank_account_name": {
            "type": "string",
            "description": "The name of the account",
            "example": "My Checking Acc"
          },
          "bank_account_number": {
            "type": "string",
            "description": "The account number",
            "example": "111 234 2332"
          },
          "bank_account_status": {
            "type": "string",
            "description": "The status of the bank account",
            "example": "ACTIVE"
          },
          "bank_account_type": {
            "type": "string",
            "description": "The type of account",
            "example": "CREDITCARD"
          },
          "balance": {
            "type": "number",
            "description": "The current bank balance if available",
            "example": 1000000
          },
          "currency": {
            "type": "string",
            "description": "iso_3166_3 code",
            "example": "USD"
          }
        }
      },
      "BankTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The bank integration hashed id",
            "example": "AS3df3A"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "AS3df3A"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "AS3df3A"
          },
          "transaction_id": {
            "type": "integer",
            "description": "The id of the transaction rule",
            "example": 343434
          },
          "amount": {
            "type": "number",
            "description": "The transaction amount",
            "example": 10
          },
          "currency_id": {
            "type": "string",
            "description": "The currency ID of the currency",
            "example": "1"
          },
          "account_type": {
            "type": "string",
            "description": "The account type",
            "example": "creditCard"
          },
          "description": {
            "type": "string",
            "description": "The description of the transaction",
            "example": "Potato purchases for kevin"
          },
          "category_id": {
            "type": "integer",
            "description": "The category id",
            "example": 1
          },
          "category_type": {
            "type": "string",
            "description": "The category description",
            "example": "Expenses"
          },
          "base_type": {
            "type": "string",
            "description": "Either CREDIT or DEBIT",
            "example": "CREDIT"
          },
          "date": {
            "type": "string",
            "description": "The date of the transaction",
            "example": "2022-09-01"
          },
          "bank_account_id": {
            "type": "integer",
            "description": "The ID number of the bank account",
            "example": 1
          }
        }
      },
      "BankTransactionRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The bank transaction rules hashed id",
            "example": "AS3df3A"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "AS3df3A"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "AS3df3A"
          },
          "name": {
            "type": "string",
            "description": "The name of the transaction",
            "example": "Rule 1"
          },
          "rules": {
            "type": "array",
            "description": "A mapped collection of the sub rules for the BankTransactionRule",
            "items": {
              "$ref": "#/components/schemas/BTRules"
            }
          },
          "auto_convert": {
            "type": "boolean",
            "description": "Flags whether the rule converts the transaction automatically",
            "example": true
          },
          "matches_on_all": {
            "type": "boolean",
            "description": "Flags whether all subrules are required for the match",
            "example": true
          },
          "applies_to": {
            "type": "string",
            "description": "Flags whether the rule applies to a CREDIT or DEBIT",
            "example": "CREDIT"
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": "AS3df3A"
          },
          "vendor_id": {
            "type": "string",
            "description": "The vendor hashed id",
            "example": "AS3df3A"
          },
          "category_id": {
            "type": "string",
            "description": "The category hashed id",
            "example": "AS3df3A"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "______",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "______",
            "example": "Opnel5aKBz"
          },
          "product_id": {
            "type": "string",
            "description": "______",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "______",
            "example": "Opnel5aKBz"
          },
          "recurring_invoice_id": {
            "type": "string",
            "description": "______",
            "example": "Opnel5aKBz"
          },
          "is_recurring": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "frequency_id": {
            "type": "string",
            "description": "integer const representation of the frequency",
            "example": "1"
          },
          "auto_bill": {
            "type": "string",
            "description": "enum setting",
            "example": "always"
          },
          "promo_code": {
            "type": "string",
            "description": "______",
            "example": "PROMOCODE4U"
          },
          "promo_discount": {
            "type": "number",
            "description": "______",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "allow_cancellation": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "per_seat_enabled": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "currency_id": {
            "type": "integer",
            "description": "______",
            "example": 1
          },
          "max_seats_limit": {
            "type": "integer",
            "description": "______",
            "example": 100
          },
          "trial_enabled": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "trial_duration": {
            "type": "integer",
            "description": "______",
            "example": 2
          },
          "allow_query_overrides": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "allow_plan_changes": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "refund_period": {
            "type": "integer",
            "description": "______",
            "example": 2
          },
          "webhook_configuration": {
            "type": "string",
            "description": "______",
            "example": "2"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "______",
            "example": true
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "BulkAction": {
        "type": "array",
        "items": {
          "type": "integer"
        }
      },
      "ClientContact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed if of the contact",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The hashed id of the user who created the contact",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The hashed id of the client",
            "example": "Opnel5aKBz"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the contact",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact",
            "example": "Doe"
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the contact",
            "example": "555-152-4524"
          },
          "custom_value1": {
            "type": "string",
            "description": "A Custom field value",
            "example": ""
          },
          "custom_value2": {
            "type": "string",
            "description": "A Custom field value",
            "example": ""
          },
          "custom_value3": {
            "type": "string",
            "description": "A Custom field value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A Custom field value",
            "example": ""
          },
          "email": {
            "type": "string",
            "description": "The email of the contact",
            "example": ""
          },
          "accepted_terms_version": {
            "type": "string",
            "description": "The terms of service which the contact has accpeted",
            "example": "A long set of ToS"
          },
          "password": {
            "type": "string",
            "description": "The hashed password of the contact",
            "example": "*****"
          },
          "confirmation-code": {
            "type": "string",
            "description": "The confirmation code used to authenticate the contacts email address",
            "example": "333-sdjkh34gbasd"
          },
          "token": {
            "type": "string",
            "description": "A uuid based token.",
            "example": "333-sdjkh34gbasd"
          },
          "is_primary": {
            "type": "boolean",
            "description": "Defines is this contact is the primary contact for the client",
            "example": true
          },
          "confirmed": {
            "type": "boolean",
            "description": "Boolean value confirms the user has confirmed their account.",
            "example": true
          },
          "is_locked": {
            "type": "boolean",
            "description": "Boolean value defines if the contact has been locked out.",
            "example": true
          },
          "send_email": {
            "type": "boolean",
            "description": "Boolean value determines is this contact should receive emails",
            "example": true
          },
          "failed_logins": {
            "type": "number",
            "description": "The number of failed logins the contact has had",
            "format": "integer",
            "example": 3
          },
          "email_verified_at": {
            "type": "number",
            "description": "The date which the contact confirmed their email",
            "format": "integer",
            "example": 134341234234
          },
          "last_login": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "deleted_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "ClientGatewayToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the client gateway token",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": "2"
          },
          "client_id": {
            "type": "string",
            "description": "The hashed_id of the client",
            "example": "2"
          },
          "token": {
            "type": "string",
            "description": "The payment token",
            "example": "2"
          },
          "routing_number": {
            "type": "string",
            "description": "THe bank account routing number",
            "example": "2"
          },
          "company_gateway_id": {
            "type": "string",
            "description": "The hashed id of the company gateway",
            "example": "2"
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag determining if the token is the default payment method",
            "example": true
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the client",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The hashed id of the user",
            "example": ""
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": ""
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientContact"
            }
          },
          "name": {
            "type": "string",
            "description": "The client name",
            "example": "Jims housekeeping"
          },
          "website": {
            "type": "string",
            "description": "The client website",
            "example": "www.jims.com"
          },
          "private_notes": {
            "type": "string",
            "description": "Private notes on the client",
            "example": "These are very private notes"
          },
          "client_hash": {
            "type": "string",
            "description": "The client hash",
            "example": "asdfkjhk342hjhbfdvmnfb1"
          },
          "industry_id": {
            "type": "number",
            "description": "The industry id of the client",
            "example": 5
          },
          "size_id": {
            "type": "number",
            "description": "The size id of the client",
            "example": 2
          },
          "address1": {
            "type": "string",
            "description": "Address line 1",
            "example": ""
          },
          "address2": {
            "type": "string",
            "description": "Address line 2",
            "example": ""
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "Beverley Hills"
          },
          "state": {
            "type": "string",
            "description": "State/Locality",
            "example": "Californnia"
          },
          "postal_code": {
            "type": "string",
            "description": "Zip / Postal code",
            "example": "90210"
          },
          "phone": {
            "type": "string",
            "description": "The client phone number",
            "example": "555-3434-3434"
          },
          "country_id": {
            "type": "number",
            "description": "The client country id",
            "format": "integer",
            "example": 1
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom value",
            "example": "Something custom"
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom value",
            "example": "2002-01-01"
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom value",
            "example": "Something custom"
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom value",
            "example": "Something custom"
          },
          "vat_number": {
            "type": "string",
            "description": "The client VAT number",
            "example": "VAT123"
          },
          "id_number": {
            "type": "string",
            "description": " The client id number",
            "example": "CLIENT_ID_NUMBER"
          },
          "number": {
            "type": "string",
            "description": "The client number - assigned by the system typically",
            "example": ""
          },
          "shipping_address1": {
            "type": "string",
            "description": "The shipping address line 1",
            "example": "5 Wallaby Way"
          },
          "shipping_address2": {
            "type": "string",
            "description": "The shipping address line 2",
            "example": "Suite 5"
          },
          "shipping_city": {
            "type": "string",
            "description": "The shipping city",
            "example": "Perth"
          },
          "shipping_state": {
            "type": "string",
            "description": "The shipping state",
            "example": "Western Australia"
          },
          "shipping_postal_code": {
            "type": "string",
            "description": "The shipping postal code",
            "example": "6110"
          },
          "shipping_country_id": {
            "type": "number",
            "description": "The shipping country id",
            "format": "integer",
            "example": 4
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Boolean flagged determining if the client has been deleted",
            "example": true
          },
          "balance": {
            "type": "number",
            "description": "The client balance",
            "format": "float",
            "example": 10
          },
          "paid_to_date": {
            "type": "number",
            "description": "The amount the client has paid to date.",
            "format": "float",
            "example": 10
          },
          "credit_balance": {
            "type": "number",
            "description": "An amount which is available to the client for future use.",
            "format": "float",
            "example": 10
          },
          "last_login": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          }
        }
      },
      "CompanyGateway": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the company gateway",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "2"
          },
          "gateway_key": {
            "type": "string",
            "description": "The gateway key (hash)",
            "example": "2"
          },
          "accepted_credit_cards": {
            "type": "integer",
            "description": "Bitmask representation of cards",
            "example": 32
          },
          "require_billing_address": {
            "type": "boolean",
            "description": "Determines if the the billing address is required prior to payment.",
            "example": true
          },
          "require_shipping_address": {
            "type": "boolean",
            "description": "Determines if the the billing address is required prior to payment.",
            "example": true
          },
          "config": {
            "type": "string",
            "description": "The configuration map for the gateway",
            "example": "dfadsfdsafsafd"
          },
          "update_details": {
            "type": "boolean",
            "description": "Determines if the client details should be updated.",
            "example": true
          },
          "fees_and_limits": {
            "type": "array",
            "description": "A mapped collection of the fees and limits for the configured gateway",
            "items": {
              "$ref": "#/components/schemas/FeesAndLimits"
            }
          }
        }
      },
      "CompanyLedger": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "This field will reference one of the following entity hashed ID payment_id, invoice_id or credit_id",
            "example": "AS3df3A"
          },
          "notes": {
            "type": "string",
            "description": "The notes which reference this entry of the ledger",
            "example": "Credit note for invoice #3212"
          },
          "balance": {
            "type": "number",
            "description": "The client balance",
            "format": "float",
            "example": 10
          },
          "adjustment": {
            "type": "number",
            "description": "The amount the client balance is adjusted by",
            "format": "float",
            "example": 10
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The company hash id",
            "example": "WJxbojagwO"
          },
          "size_id": {
            "type": "string",
            "description": "The company size ID",
            "example": "1"
          },
          "industry_id": {
            "type": "string",
            "description": "The company industry ID",
            "example": "1"
          },
          "slack_webhook_url": {
            "type": "string",
            "description": "The slack webhook notification URL",
            "example": "https://slack.com/sh328sj"
          },
          "google_analytics_key": {
            "type": "string",
            "description": "The google analytics key",
            "example": "1"
          },
          "portal_mode": {
            "type": "string",
            "description": "Determines the client facing urls ie: subdomain,domain,iframe",
            "example": "subdomain"
          },
          "subdomain": {
            "type": "string",
            "description": "Specifies the first part of the company domain ie acme in acme.domain.com",
            "example": "aceme"
          },
          "portal_domain": {
            "type": "string",
            "description": "The fully qualified domain for client facing URLS",
            "example": "https://subdomain.invoicing.co"
          },
          "enabled_tax_rates": {
            "type": "integer",
            "description": "Number of taxes rates used per entity",
            "example": 1
          },
          "fill_products": {
            "type": "boolean",
            "description": "Toggles filling a product description based on product key",
            "example": true
          },
          "convert_products": {
            "type": "boolean",
            "description": "___________",
            "example": true
          },
          "update_products": {
            "type": "boolean",
            "description": "Toggles updating a product description which description changes",
            "example": true
          },
          "show_product_details": {
            "type": "boolean",
            "description": "Toggles showing a product description which description changes",
            "example": true
          },
          "custom_fields": {
            "type": "object",
            "description": "Custom fields map"
          },
          "enable_product_cost": {
            "type": "boolean",
            "description": "Show/Hide the product cost field in the UI",
            "example": true
          },
          "enable_product_quantity": {
            "type": "boolean",
            "description": "Show/hide the product quantity field (used in the UI to show the default quantity)",
            "example": true
          },
          "default_quantity": {
            "type": "boolean",
            "description": "Enable/Disable whether to use a default quantity",
            "example": true
          },
          "custom_surcharge_taxes1": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_taxes2": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_taxes3": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_taxes4": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "logo": {
            "type": "object",
            "description": "The company logo - binary",
            "example": "logo.png"
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          }
        }
      },
      "CompanySettings": {
        "type": "object",
        "properties": {
          "timezone_id": {
            "type": "string",
            "description": "The timezone id",
            "example": "15"
          },
          "date_format_id": {
            "type": "string",
            "description": "The date format id",
            "example": "15"
          },
          "military_time": {
            "type": "boolean",
            "description": "Toggles 12/24 hour time",
            "example": true
          },
          "language_id": {
            "type": "string",
            "description": "The language id",
            "example": "1"
          },
          "show_currency_code": {
            "type": "boolean",
            "description": "Toggles whether the currency symbol or code is shown",
            "example": true
          },
          "currency_id": {
            "type": "string",
            "description": "The default currency id",
            "example": "true"
          },
          "payment_terms": {
            "type": "integer",
            "description": "-1 sets no payment term, 0 sets payment due immediately, positive integers indicates payment terms in days",
            "example": 1
          },
          "company_gateway_ids": {
            "type": "string",
            "description": "A commad separate list of available gateways",
            "example": "1,2,3,4"
          },
          "custom_value1": {
            "type": "string",
            "description": "A Custom Label",
            "example": "Custom Label"
          },
          "custom_value2": {
            "type": "string",
            "description": "A Custom Label",
            "example": "Custom Label"
          },
          "custom_value3": {
            "type": "string",
            "description": "A Custom Label",
            "example": "Custom Label"
          },
          "custom_value4": {
            "type": "string",
            "description": "A Custom Label",
            "example": "Custom Label"
          },
          "default_task_rate": {
            "type": "number",
            "description": "The default task rate",
            "format": "float",
            "example": 10
          },
          "send_reminders": {
            "type": "boolean",
            "description": "Toggles whether reminders are sent",
            "example": true
          },
          "enable_client_portal_tasks": {
            "type": "boolean",
            "description": "Show/hide the tasks panel in the client portal",
            "example": true
          },
          "email_style": {
            "type": "string",
            "description": "options include plain,light,dark,custom",
            "example": "light"
          },
          "reply_to_email": {
            "type": "string",
            "description": "The reply to email address",
            "example": "email@gmail.com"
          },
          "bcc_email": {
            "type": "string",
            "description": "A comma separate list of BCC emails",
            "example": "email@gmail.com, contact@gmail.com"
          },
          "pdf_email_attachment": {
            "type": "boolean",
            "description": "Toggles whether to attach PDF as attachment",
            "example": true
          },
          "ubl_email_attachment": {
            "type": "boolean",
            "description": "Toggles whether to attach UBL as attachment",
            "example": true
          },
          "email_style_custom": {
            "type": "string",
            "description": "The custom template",
            "example": "<HTML></HTML>"
          },
          "counter_number_applied": {
            "type": "string",
            "description": "enum when the invoice number counter is set, ie when_saved, when_sent, when_paid",
            "example": "when_sent"
          },
          "quote_number_applied": {
            "type": "string",
            "description": "enum when the quote number counter is set, ie when_saved, when_sent",
            "example": "when_sent"
          },
          "custom_message_dashboard": {
            "type": "string",
            "description": "A custom message which is displayed on the dashboard",
            "example": "Please pay invoices immediately"
          },
          "custom_message_unpaid_invoice": {
            "type": "string",
            "description": "A custom message which is displayed in the client portal when a client is viewing a unpaid invoice.",
            "example": "Please pay invoices immediately"
          },
          "custom_message_paid_invoice": {
            "type": "string",
            "description": "A custom message which is displayed in the client portal when a client is viewing a paid invoice.",
            "example": "Thanks for paying this invoice!"
          },
          "custom_message_unapproved_quote": {
            "type": "string",
            "description": "A custom message which is displayed in the client portal when a client is viewing a unapproved quote.",
            "example": "Please approve quote"
          },
          "lock_invoices": {
            "type": "boolean",
            "description": "Toggles whether invoices are locked once sent and cannot be modified further",
            "example": true
          },
          "auto_archive_invoice": {
            "type": "boolean",
            "description": "Toggles whether a invoice is archived immediately following payment",
            "example": true
          },
          "auto_archive_quote": {
            "type": "boolean",
            "description": "Toggles whether a quote is archived after being converted to a invoice",
            "example": true
          },
          "auto_convert_quote": {
            "type": "boolean",
            "description": "Toggles whether a quote is converted to a invoice when approved",
            "example": true
          },
          "inclusive_taxes": {
            "type": "boolean",
            "description": "Boolean flag determining whether inclusive or exclusive taxes are used",
            "example": true
          },
          "translations": {
            "type": "object",
            "description": "JSON payload of customized translations",
            "example": ""
          },
          "task_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the task number pattern",
            "example": "{$year}-{$counter}"
          },
          "task_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for tasks",
            "example": 1
          },
          "reminder_send_time": {
            "type": "integer",
            "description": "Time from UTC +0 when the email will be sent to the client",
            "example": 32400
          },
          "expense_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the expense number pattern",
            "example": "{$year}-{$counter}"
          },
          "expense_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for expenses",
            "example": 1
          },
          "vendor_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the vendor number pattern",
            "example": "{$year}-{$counter}"
          },
          "vendor_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for vendors",
            "example": 1
          },
          "ticket_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the ticket number pattern",
            "example": "{$year}-{$counter}"
          },
          "ticket_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for tickets",
            "example": 1
          },
          "payment_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the payment number pattern",
            "example": "{$year}-{$counter}"
          },
          "payment_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for payments",
            "example": 1
          },
          "invoice_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the invoice number pattern",
            "example": "{$year}-{$counter}"
          },
          "invoice_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for invoices",
            "example": 1
          },
          "quote_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the quote number pattern",
            "example": "{$year}-{$counter}"
          },
          "quote_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for quotes",
            "example": 1
          },
          "client_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the client number pattern",
            "example": "{$year}-{$counter}"
          },
          "client_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for clients",
            "example": 1
          },
          "credit_number_pattern": {
            "type": "string",
            "description": "Allows customisation of the credit number pattern",
            "example": "{$year}-{$counter}"
          },
          "credit_number_counter": {
            "type": "integer",
            "description": "The incrementing counter for credits",
            "example": 1
          },
          "recurring_invoice_number_prefix": {
            "type": "string",
            "description": "This string is prepended to the recurring invoice number",
            "example": "R"
          },
          "reset_counter_frequency_id": {
            "type": "integer",
            "description": "CONSTANT which is used to apply the frequency which the counters are reset",
            "example": 1
          },
          "reset_counter_date": {
            "type": "string",
            "description": "The explicit date which is used to reset counters",
            "example": "2019-01-01"
          },
          "counter_padding": {
            "type": "integer",
            "description": "Pads the counter with leading zeros",
            "example": 1
          },
          "shared_invoice_quote_counter": {
            "type": "boolean",
            "description": "Flags whether to share the counter for invoices and quotes",
            "example": true
          },
          "update_products": {
            "type": "boolean",
            "description": "Determines if client fields are updated from third party APIs",
            "example": true
          },
          "convert_products": {
            "type": "boolean",
            "description": "",
            "example": true
          },
          "fill_products": {
            "type": "boolean",
            "description": "Automatically fill products based on product_key",
            "example": true
          },
          "invoice_terms": {
            "type": "string",
            "description": "The default invoice terms",
            "example": "Invoice Terms are..."
          },
          "quote_terms": {
            "type": "string",
            "description": "The default quote terms",
            "example": "Quote Terms are..."
          },
          "invoice_taxes": {
            "type": "number",
            "description": "Taxes can be applied to the invoice",
            "example": 1
          },
          "invoice_design_id": {
            "type": "string",
            "description": "The default design id (invoice, quote etc)",
            "example": "1"
          },
          "quote_design_id": {
            "type": "string",
            "description": "The default design id (invoice, quote etc)",
            "example": "1"
          },
          "invoice_footer": {
            "type": "string",
            "description": "The default invoice footer",
            "example": "1"
          },
          "invoice_labels": {
            "type": "string",
            "description": "JSON string of invoice labels",
            "example": "1"
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax rate (float)",
            "example": 10
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": "GST"
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate (float)",
            "example": 10
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax name",
            "example": "GST"
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate (float)",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": "GST"
          },
          "payment_type_id": {
            "type": "string",
            "description": "The default payment type id",
            "example": "1"
          },
          "custom_fields": {
            "type": "string",
            "description": "JSON string of custom fields",
            "example": "{}"
          },
          "email_footer": {
            "type": "string",
            "description": "The default email footer",
            "example": "A default email footer"
          },
          "email_sending_method": {
            "type": "string",
            "description": "The email driver to use to send email, options include default, gmail",
            "example": "default"
          },
          "gmail_sending_user_id": {
            "type": "string",
            "description": "The hashed_id of the user account to send email from",
            "example": "F76sd34D"
          },
          "email_subject_invoice": {
            "type": "string",
            "description": "",
            "example": "Your Invoice Subject"
          },
          "email_subject_quote": {
            "type": "string",
            "description": "",
            "example": "Your Quote Subject"
          },
          "email_subject_payment": {
            "type": "string",
            "description": "",
            "example": "Your Payment Subject"
          },
          "email_template_invoice": {
            "type": "string",
            "description": "The full template for invoice emails",
            "example": "<HTML></HTML>"
          },
          "email_template_quote": {
            "type": "string",
            "description": "The full template for quote emails",
            "example": "<HTML></HTML>"
          },
          "email_template_payment": {
            "type": "string",
            "description": "The full template for payment emails",
            "example": "<HTML></HTML>"
          },
          "email_subject_reminder1": {
            "type": "string",
            "description": "Email subject for Reminder",
            "example": "<HTML></HTML>"
          },
          "email_subject_reminder2": {
            "type": "string",
            "description": "Email subject for Reminder",
            "example": "<HTML></HTML>"
          },
          "email_subject_reminder3": {
            "type": "string",
            "description": "Email subject for Reminder",
            "example": "<HTML></HTML>"
          },
          "email_subject_reminder_endless": {
            "type": "string",
            "description": "Email subject for endless reminders",
            "example": "<HTML></HTML>"
          },
          "email_template_reminder1": {
            "type": "string",
            "description": "The full template for Reminder 1",
            "example": "<HTML></HTML>"
          },
          "email_template_reminder2": {
            "type": "string",
            "description": "The full template for Reminder 2",
            "example": "<HTML></HTML>"
          },
          "email_template_reminder3": {
            "type": "string",
            "description": "The full template for Reminder 3",
            "example": "<HTML></HTML>"
          },
          "email_template_reminder_endless": {
            "type": "string",
            "description": "The full template for enless reminders",
            "example": "<HTML></HTML>"
          },
          "enable_portal_password": {
            "type": "boolean",
            "description": "Toggles whether a password is required to log into the client portal",
            "example": true
          },
          "show_accept_invoice_terms": {
            "type": "boolean",
            "description": "Toggles whether the terms dialogue is shown to the client",
            "example": true
          },
          "show_accept_quote_terms": {
            "type": "boolean",
            "description": "Toggles whether the terms dialogue is shown to the client",
            "example": true
          },
          "require_invoice_signature": {
            "type": "boolean",
            "description": "Toggles whether a invoice signature is required",
            "example": true
          },
          "require_quote_signature": {
            "type": "boolean",
            "description": "Toggles whether a quote signature is required",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "The company name",
            "example": "Acme Co"
          },
          "company_logo": {
            "type": "object",
            "description": "The company logo file",
            "example": "logo.png"
          },
          "website": {
            "type": "string",
            "description": "The company website URL",
            "example": "www.acme.com"
          },
          "address1": {
            "type": "string",
            "description": "The company address line 1",
            "example": "Suite 888"
          },
          "address2": {
            "type": "string",
            "description": "The company address line 2",
            "example": "5 Jimbo Way"
          },
          "city": {
            "type": "string",
            "description": "The company city",
            "example": "Sydney"
          },
          "state": {
            "type": "string",
            "description": "The company state",
            "example": "Florisa"
          },
          "postal_code": {
            "type": "string",
            "description": "The company zip/postal code",
            "example": "90210"
          },
          "phone": {
            "type": "string",
            "description": "The company phone",
            "example": "555-213-3948"
          },
          "email": {
            "type": "string",
            "description": "The company email",
            "example": "joe@acme.co"
          },
          "country_id": {
            "type": "string",
            "description": "The country ID",
            "example": "1"
          },
          "vat_number": {
            "type": "string",
            "description": "The company VAT/TAX ID number",
            "example": "32 120 377 720"
          },
          "page_size": {
            "type": "string",
            "description": "The default page size",
            "example": "A4"
          },
          "font_size": {
            "type": "number",
            "description": "The font size",
            "example": 9
          },
          "primary_font": {
            "type": "string",
            "description": "The primary font",
            "example": "roboto"
          },
          "secondary_font": {
            "type": "string",
            "description": "The secondary font",
            "example": "roboto"
          },
          "hide_paid_to_date": {
            "type": "boolean",
            "description": "Flags whether to hide the paid to date field",
            "example": false
          },
          "embed_documents": {
            "type": "boolean",
            "description": "Toggled whether to embed documents in the PDF",
            "example": false
          },
          "all_pages_header": {
            "type": "boolean",
            "description": "The header for the PDF",
            "example": false
          },
          "all_pages_footer": {
            "type": "boolean",
            "description": "The footer for the PDF",
            "example": false
          },
          "document_email_attachment": {
            "type": "boolean",
            "description": "Toggles whether to attach documents in the email",
            "example": false
          },
          "enable_client_portal_password": {
            "type": "boolean",
            "description": "Toggles password protection of the client portal",
            "example": false
          },
          "enable_email_markup": {
            "type": "boolean",
            "description": "Toggles the use of markdown in emails",
            "example": false
          },
          "enable_client_portal_dashboard": {
            "type": "boolean",
            "description": "Toggles whether the client dashboard is shown in the client portal",
            "example": false
          },
          "enable_client_portal": {
            "type": "boolean",
            "description": "Toggles whether the entire client portal is displayed to the client, or only the context",
            "example": false
          },
          "email_template_statement": {
            "type": "string",
            "description": "The body of the email for statements",
            "example": "template matter"
          },
          "email_subject_statement": {
            "type": "string",
            "description": "The subject of the email for statements",
            "example": "subject matter"
          },
          "signature_on_pdf": {
            "type": "boolean",
            "description": "Toggles whether the signature (if available) is displayed on the PDF",
            "example": false
          },
          "quote_footer": {
            "type": "string",
            "description": "The default quote footer",
            "example": "the quote footer"
          },
          "email_subject_custom1": {
            "type": "string",
            "description": "Custom reminder template subject",
            "example": "Custom Subject 1"
          },
          "email_subject_custom2": {
            "type": "string",
            "description": "Custom reminder template subject",
            "example": "Custom Subject 2"
          },
          "email_subject_custom3": {
            "type": "string",
            "description": "Custom reminder template subject",
            "example": "Custom Subject 3"
          },
          "email_template_custom1": {
            "type": "string",
            "description": "Custom reminder template body",
            "example": "<HTML>"
          },
          "email_template_custom2": {
            "type": "string",
            "description": "Custom reminder template body",
            "example": "<HTML>"
          },
          "email_template_custom3": {
            "type": "string",
            "description": "Custom reminder template body",
            "example": "<HTML>"
          },
          "enable_reminder1": {
            "type": "boolean",
            "description": "Toggles whether this reminder is enabled",
            "example": false
          },
          "enable_reminder2": {
            "type": "boolean",
            "description": "Toggles whether this reminder is enabled",
            "example": false
          },
          "enable_reminder3": {
            "type": "boolean",
            "description": "Toggles whether this reminder is enabled",
            "example": false
          },
          "num_days_reminder1": {
            "type": "number",
            "description": "The Reminder interval",
            "example": 9
          },
          "num_days_reminder2": {
            "type": "number",
            "description": "The Reminder interval",
            "example": 9
          },
          "num_days_reminder3": {
            "type": "number",
            "description": "The Reminder interval",
            "example": 9
          },
          "schedule_reminder1": {
            "type": "string",
            "description": "(enum: after_invoice_date, before_due_date, after_due_date)",
            "example": "after_invoice_date"
          },
          "schedule_reminder2": {
            "type": "string",
            "description": "(enum: after_invoice_date, before_due_date, after_due_date)",
            "example": "after_invoice_date"
          },
          "schedule_reminder3": {
            "type": "string",
            "description": "(enum: after_invoice_date, before_due_date, after_due_date)",
            "example": "after_invoice_date"
          },
          "late_fee_amount1": {
            "type": "number",
            "description": "The late fee amount for reminder 1",
            "example": 10
          },
          "late_fee_amount2": {
            "type": "number",
            "description": "The late fee amount for reminder 2",
            "example": 20
          },
          "late_fee_amount3": {
            "type": "number",
            "description": "The late fee amount for reminder 2",
            "example": 100
          },
          "endless_reminder_frequency_id": {
            "type": "string",
            "description": "The frequency id of the endless reminder",
            "example": "1"
          },
          "client_online_payment_notification": {
            "type": "boolean",
            "description": "Determines if a client should receive the notification for a online payment",
            "example": false
          },
          "client_manual_payment_notification": {
            "type": "boolean",
            "description": "Determines if a client should receive the notification for a manually entered payment",
            "example": false
          }
        }
      },
      "CompanyToken": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The token name",
            "example": "Token Name"
          },
          "token": {
            "type": "string",
            "description": "The token value",
            "example": "AS3df3jUUH765fhfd9KJuidj3JShjA"
          },
          "is_system": {
            "type": "boolean",
            "description": "Determines whether the token is created by the system rather than a user",
            "example": true
          }
        }
      },
      "CompanyUser": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "string",
            "description": "The company user permissions",
            "example": "[create_invoice]"
          },
          "settings": {
            "type": "object",
            "description": "The company name",
            "example": "The local shop"
          },
          "is_owner": {
            "type": "boolean",
            "description": "Determines whether the user owns this company",
            "example": true
          },
          "is_admin": {
            "type": "boolean",
            "description": "Determines whether the user is the admin of this company",
            "example": true
          },
          "is_locked": {
            "type": "boolean",
            "description": "Determines whether the users access to this company has been locked",
            "example": true
          },
          "updated_at": {
            "type": "integer",
            "description": "The last time the record was modified",
            "example": 1231232312321
          },
          "deleted_at": {
            "type": "integer",
            "description": "Timestamp when the user was archived",
            "example": 12312312321
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "$ref": "#/components/schemas/CompanyToken"
          }
        }
      },
      "CreditPaymentable": {
        "type": "object",
        "properties": {
          "credit_id": {
            "type": "string",
            "description": "The credit hashed id",
            "example": "Opnel5aKBz"
          },
          "amount": {
            "type": "string",
            "description": "The credit amount",
            "example": "2"
          }
        }
      },
      "Credit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The credit hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": ""
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": ""
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": ""
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": ""
          },
          "status_id": {
            "type": "string",
            "description": "The status field id infors of the current status of the credit",
            "example": ""
          },
          "invoice_id": {
            "type": "string",
            "description": "The linked invoice this credit is applied to",
            "example": ""
          },
          "number": {
            "type": "string",
            "description": "The credit number - is a unique alpha numeric number per credit per company",
            "example": "QUOTE_101"
          },
          "po_number": {
            "type": "string",
            "description": "The purchase order number this credit refers to",
            "example": ""
          },
          "terms": {
            "type": "string",
            "description": "The credit terms field",
            "example": ""
          },
          "public_notes": {
            "type": "string",
            "description": "The public notes field of the credit",
            "example": ""
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes field of the credit",
            "example": ""
          },
          "footer": {
            "type": "string",
            "description": "The credit footer text",
            "example": ""
          },
          "custom_value1": {
            "type": "string",
            "description": "A Custom value",
            "example": ""
          },
          "custom_value2": {
            "type": "string",
            "description": "A Custom value",
            "example": ""
          },
          "custom_value3": {
            "type": "string",
            "description": "A Custom value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A Custom value",
            "example": ""
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax rate",
            "example": ""
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax name",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "total_taxes": {
            "type": "number",
            "description": "The total taxes for the credit",
            "format": "float",
            "example": 10
          },
          "line_items": {
            "type": "object",
            "description": "The line items array containing the line items of the credit",
            "example": ""
          },
          "amount": {
            "type": "number",
            "description": "The total credit amount",
            "format": "float",
            "example": 10
          },
          "balance": {
            "type": "number",
            "description": "The credit balance",
            "format": "float",
            "example": 10
          },
          "paid_to_date": {
            "type": "number",
            "description": "_________",
            "format": "float",
            "example": 10
          },
          "discount": {
            "type": "number",
            "description": "_________",
            "format": "float",
            "example": 10
          },
          "partial": {
            "type": "number",
            "description": "_________",
            "format": "float",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "_________",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "_________",
            "example": true
          },
          "uses_inclusive_taxes": {
            "type": "boolean",
            "description": "Defines the type of taxes used as either inclusive or exclusive",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "The Credit Date",
            "format": "date",
            "example": "1994-07-30"
          },
          "last_sent_date": {
            "type": "string",
            "description": "The last date the credit was sent out",
            "format": "date",
            "example": "1994-07-30"
          },
          "next_send_date": {
            "type": "string",
            "description": "The Next date for a reminder to be sent",
            "format": "date",
            "example": "1994-07-30"
          },
          "partial_due_date": {
            "type": "string",
            "description": "_________",
            "format": "date",
            "example": "1994-07-30"
          },
          "due_date": {
            "type": "string",
            "description": "_________",
            "format": "date",
            "example": "1994-07-30"
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          },
          "last_viewed": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "custom_surcharge1": {
            "type": "number",
            "description": "First Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge2": {
            "type": "number",
            "description": "Second Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge3": {
            "type": "number",
            "description": "Third Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge4": {
            "type": "number",
            "description": "Fourth Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge_tax1": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax2": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax3": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax4": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          }
        }
      },
      "Design": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The design hashed id",
            "example": "AS3df3A"
          },
          "name": {
            "type": "string",
            "description": "The design name",
            "example": "Beauty"
          },
          "design": {
            "type": "string",
            "description": "The design HTML",
            "example": "<html></html>"
          },
          "is_custom": {
            "type": "boolean",
            "description": "Flag to determine if the design is a custom user design",
            "example": true
          },
          "is_active": {
            "type": "boolean",
            "description": "Flag to determine if the design is available for use",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Flag to determine if the design is deleted",
            "example": true
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "deleted_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The document hashed id",
            "example": "AS3df3A"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": ""
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": ""
          },
          "project_id": {
            "type": "string",
            "description": "The project associated with this document",
            "example": ""
          },
          "vendor_id": {
            "type": "string",
            "description": "The vendor associated with this documents",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "The document name",
            "example": "Beauty"
          },
          "url": {
            "type": "string",
            "description": "The document url",
            "example": "Beauty"
          },
          "preview": {
            "type": "string",
            "description": "The document preview url",
            "example": "Beauty"
          },
          "type": {
            "type": "string",
            "description": "The document type",
            "example": "Beauty"
          },
          "disk": {
            "type": "string",
            "description": "The document disk",
            "example": "Beauty"
          },
          "hash": {
            "type": "string",
            "description": "The document hashed",
            "example": "Beauty"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Flag to determine if the document is deleted",
            "example": true
          },
          "is_default": {
            "type": "boolean",
            "description": "Flag to determine if the document is a default doc",
            "example": true
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "deleted_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The company name",
            "example": "Unexpected error"
          },
          "code": {
            "type": "integer",
            "description": "The HTTP error code",
            "example": 500
          }
        }
      },
      "ExpenseCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The expense hashed id",
            "example": "Opnel5aKBz"
          },
          "name": {
            "type": "string",
            "description": "The expense category name",
            "example": "Accounting"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "XS987sD"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Flag determining whether the expense category has been deleted",
            "example": true
          },
          "updated_at": {
            "type": "integer",
            "description": "The updated at timestamp",
            "example": 2
          },
          "created_at": {
            "type": "integer",
            "description": "The created at timestamp",
            "example": 2
          }
        }
      },
      "Expense": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The expense hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": ""
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": ""
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": ""
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": ""
          },
          "invoice_id": {
            "type": "string",
            "description": "The related invoice hashed id",
            "example": ""
          },
          "bank_id": {
            "type": "string",
            "description": "The bank id related to this expense",
            "example": ""
          },
          "invoice_currency_id": {
            "type": "string",
            "description": "The currency id of the related invoice",
            "example": ""
          },
          "expense_currency_id": {
            "type": "string",
            "description": "The currency id of the expense",
            "example": ""
          },
          "invoice_category_id": {
            "type": "string",
            "description": "The invoice category id",
            "example": ""
          },
          "payment_type_id": {
            "type": "string",
            "description": "The payment type id",
            "example": ""
          },
          "recurring_expense_id": {
            "type": "string",
            "description": "The related recurring expense this expense was created from",
            "example": ""
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes of the expense",
            "example": ""
          },
          "public_notes": {
            "type": "string",
            "description": "The public notes of the expense",
            "example": ""
          },
          "transaction_reference": {
            "type": "string",
            "description": "The transaction references of the expense",
            "example": ""
          },
          "transcation_id": {
            "type": "string",
            "description": "The transaction id of the expense",
            "example": ""
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom value",
            "example": ""
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom value",
            "example": ""
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom value",
            "example": ""
          },
          "tax_name1": {
            "type": "string",
            "description": "Tax name",
            "example": ""
          },
          "tax_name2": {
            "type": "string",
            "description": "Tax name",
            "example": ""
          },
          "tax_rate1": {
            "type": "number",
            "description": "Tax rate",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "Tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "Tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "Tax rate",
            "format": "float",
            "example": 10
          },
          "amount": {
            "type": "number",
            "description": "The total expense amont",
            "format": "float",
            "example": 10
          },
          "foreign_amount": {
            "type": "number",
            "description": "The total foreign amount of the expense",
            "format": "float",
            "example": 10
          },
          "exchange_rate": {
            "type": "number",
            "description": "The exchange rate at the time of the expense",
            "format": "float",
            "example": 0.8
          },
          "date": {
            "type": "string",
            "description": "The expense date formate Y-m-d",
            "example": "2022-12-01"
          },
          "payment_date": {
            "type": "string",
            "description": "The date of payment for the expense, format Y-m-d",
            "example": ""
          },
          "should_be_invoiced": {
            "type": "boolean",
            "description": "Flag whether the expense should be invoiced",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Boolean determining whether the expense has been deleted",
            "example": true
          },
          "invoice_documents": {
            "type": "boolean",
            "description": "Passing the expense documents over to the invoice",
            "example": true
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          }
        }
      },
      "FeesAndLimits": {
        "type": "object",
        "properties": {
          "min_limit": {
            "type": "string",
            "description": "The minimum amount accepted for this gateway",
            "example": "2"
          },
          "max_limit": {
            "type": "string",
            "description": "The maximum amount accepted for this gateway",
            "example": "2"
          },
          "fee_amount": {
            "type": "number",
            "description": "The gateway fee amount",
            "format": "float",
            "example": 2
          },
          "fee_percent": {
            "type": "number",
            "description": "The gateway fee percentage",
            "format": "float",
            "example": 2
          },
          "fee_tax_name1": {
            "type": "string",
            "description": "Fee tax name",
            "example": "GST"
          },
          "fee_tax_name2": {
            "type": "string",
            "description": "Fee tax name",
            "example": "VAT"
          },
          "fee_tax_name3": {
            "type": "string",
            "description": "Fee tax name",
            "example": "CA Sales Tax"
          },
          "fee_tax_rate1": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "fee_tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 17.5
          },
          "fee_tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 25
          },
          "fee_cap": {
            "type": "number",
            "description": "If set the fee amount will be no higher than this amount",
            "format": "float",
            "example": 2
          },
          "adjust_fee_percent": {
            "type": "boolean",
            "description": "Adjusts the fee to match the exact gateway fee.",
            "example": true
          }
        }
      },
      "FillableInvoice": {
        "type": "object",
        "properties": {
          "assigned_user_id": {
            "type": "string",
            "description": "__________",
            "example": ""
          },
          "client_id": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "number": {
            "type": "string",
            "description": "The invoice number - is a unique alpha numeric number per invoice per company",
            "example": "INV_101"
          },
          "po_number": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "terms": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "public_notes": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "private_notes": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "footer": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value1": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value2": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value3": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "tax_name1": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "tax_name2": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "tax_rate1": {
            "type": "number",
            "description": "_________",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "_________",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "_________",
            "example": 10
          },
          "line_items": {
            "type": "object",
            "description": "_________",
            "example": ""
          },
          "discount": {
            "type": "number",
            "description": "_________",
            "example": 10
          },
          "partial": {
            "type": "number",
            "description": "_________",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "_________",
            "example": false
          },
          "uses_inclusive_taxes": {
            "type": "boolean",
            "description": "Defines the type of taxes used as either inclusive or exclusive",
            "example": false
          },
          "date": {
            "type": "string",
            "description": "The Invoice Date",
            "example": "1994-07-30"
          },
          "partial_due_date": {
            "type": "string",
            "description": "_________",
            "example": "1994-07-30"
          },
          "due_date": {
            "type": "string",
            "description": "_________",
            "example": "1994-07-30"
          },
          "custom_surcharge1": {
            "type": "number",
            "description": "First Custom Surcharge",
            "example": 10
          },
          "custom_surcharge2": {
            "type": "number",
            "description": "Second Custom Surcharge",
            "example": 10
          },
          "custom_surcharge3": {
            "type": "number",
            "description": "Third Custom Surcharge",
            "example": 10
          },
          "custom_surcharge4": {
            "type": "number",
            "description": "Fourth Custom Surcharge",
            "example": 10
          }
        }
      },
      "GenericReportSchema": {
        "type": "object",
        "properties": {
          "date_range": {
            "type": "string",
            "description": "The string representation of the date range of data to be returned",
            "example": "last7"
          },
          "date_key": {
            "type": "string",
            "description": "The date column to search between.",
            "example": "created_at"
          },
          "start_date": {
            "type": "string",
            "description": "The start date to search between",
            "example": "2000-10-31"
          },
          "end_date": {
            "type": "string",
            "description": "The end date to search between",
            "example": "2"
          },
          "report_keys": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Array of Keys to export",
              "example": "['name','date']"
            }
          }
        }
      },
      "GroupSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The group setting hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "Opnel5aKBz"
          },
          "name": {
            "type": "string",
            "description": "The name of the group",
            "example": "A groupies group"
          },
          "settings": {
            "type": "object",
            "description": "The settings object",
            "example": ""
          }
        }
      },
      "InvoicePaymentable": {
        "type": "object",
        "properties": {
          "invoice_id": {
            "type": "string",
            "description": "______",
            "example": "Opnel5aKBz"
          },
          "amount": {
            "type": "string",
            "description": "______",
            "example": "2"
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The invoice hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "Opnel5aKBz"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": "Opnel5aKBz"
          },
          "status_id": {
            "type": "string",
            "description": "The invoice status variable",
            "example": "4"
          },
          "number": {
            "type": "string",
            "description": "The invoice number - is a unique alpha numeric number per invoice per company",
            "example": "INV_101"
          },
          "po_number": {
            "type": "string",
            "description": "The purchase order associated with this invoice",
            "example": "PO-1234"
          },
          "terms": {
            "type": "string",
            "description": "The invoice terms",
            "example": "These are invoice terms"
          },
          "public_notes": {
            "type": "string",
            "description": "The public notes of the invoice",
            "example": "These are some public notes"
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes of the invoice",
            "example": "These are some private notes"
          },
          "footer": {
            "type": "string",
            "description": "The invoice footer notes",
            "example": ""
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom field value",
            "example": "2022-10-01"
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom field value",
            "example": "Something custom"
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom field value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom field value",
            "example": ""
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "total_taxes": {
            "type": "number",
            "description": "The total taxes for the invoice",
            "format": "float",
            "example": 10
          },
          "line_items": {
            "type": "object",
            "description": "An array of objects which define the line items of the invoice",
            "example": ""
          },
          "amount": {
            "type": "number",
            "description": "The invoice amount",
            "format": "float",
            "example": 10
          },
          "balance": {
            "type": "number",
            "description": "The invoice balance",
            "format": "float",
            "example": 10
          },
          "paid_to_date": {
            "type": "number",
            "description": "The amount paid on the invoice to date",
            "format": "float",
            "example": 10
          },
          "discount": {
            "type": "number",
            "description": "The invoice discount, can be an amount or a percentage",
            "format": "float",
            "example": 10
          },
          "partial": {
            "type": "number",
            "description": "The deposit/partial amount",
            "format": "float",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "Flag determining if the discount is an amount or a percentage",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Defines if the invoice has been deleted",
            "example": true
          },
          "uses_inclusive_taxes": {
            "type": "boolean",
            "description": "Defines the type of taxes used as either inclusive or exclusive",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "The Invoice Date",
            "format": "date",
            "example": "1994-07-30"
          },
          "last_sent_date": {
            "type": "string",
            "description": "The last date the invoice was sent out",
            "format": "date",
            "example": "1994-07-30"
          },
          "next_send_date": {
            "type": "string",
            "description": "The Next date for a reminder to be sent",
            "format": "date",
            "example": "1994-07-30"
          },
          "partial_due_date": {
            "type": "string",
            "description": "The due date for the deposit/partial amount",
            "format": "date",
            "example": "1994-07-30"
          },
          "due_date": {
            "type": "string",
            "description": "The due date of the invoice",
            "format": "date",
            "example": "1994-07-30"
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          },
          "last_viewed": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "custom_surcharge1": {
            "type": "number",
            "description": "First Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge2": {
            "type": "number",
            "description": "Second Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge3": {
            "type": "number",
            "description": "Third Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge4": {
            "type": "number",
            "description": "Fourth Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge_tax1": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax2": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax3": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax4": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The payment hashed id",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": "Opnel5aKBz"
          },
          "invitation_id": {
            "type": "string",
            "description": "The invitation hashed id",
            "example": "Opnel5aKBz"
          },
          "client_contact_id": {
            "type": "string",
            "description": "The client contact hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "Opnel5aKBz"
          },
          "type_id": {
            "type": "string",
            "description": "The Payment Type ID",
            "example": "1"
          },
          "date": {
            "type": "string",
            "description": "The Payment date",
            "example": "1-1-2014"
          },
          "transaction_reference": {
            "type": "string",
            "description": "The transaction reference as defined by the payment gateway",
            "example": "xcsSxcs124asd"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": "Opnel5aKBz"
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes of the payment",
            "example": "The payment was refunded due to error"
          },
          "is_manual": {
            "type": "boolean",
            "description": "Flags whether the payment was made manually or processed via a gateway",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Defines if the payment has been deleted",
            "example": true
          },
          "amount": {
            "type": "number",
            "description": "The amount of this payment",
            "example": 10
          },
          "refunded": {
            "type": "number",
            "description": "The refunded amount of this payment",
            "example": 10
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "company_gateway_id": {
            "type": "string",
            "description": "The company gateway id",
            "example": "3"
          },
          "paymentables": {
            "$ref": "#/components/schemas/Paymentable"
          },
          "invoices": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentable"
            }
          },
          "credits": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/CreditPaymentable"
            }
          }
        }
      },
      "PaymentTerm": {
        "type": "object",
        "properties": {
          "num_days": {
            "type": "integer",
            "description": "The payment term length in days",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The payment term length in string format",
            "example": "NET 1"
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "Paymentable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The paymentable hashed id",
            "example": "AS3df3A"
          },
          "invoice_id": {
            "type": "string",
            "description": "The invoice hashed id",
            "example": "AS3df3A"
          },
          "credit_id": {
            "type": "string",
            "description": "The credit hashed id",
            "example": "AS3df3A"
          },
          "refunded": {
            "type": "number",
            "description": "The amount that has been refunded for this payment",
            "format": "float",
            "example": 10
          },
          "amount": {
            "type": "number",
            "description": "The amount that has been applied to the payment",
            "format": "float",
            "example": 10
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The product hashed id",
            "example": "Opnel5aKBz"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project hashed id",
            "example": "Opnel5aKBz"
          },
          "name": {
            "type": "string",
            "description": "The project name",
            "example": "New Project"
          }
        }
      },
      "Quote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The quote hashed id",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": ""
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": ""
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": ""
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": ""
          },
          "status_id": {
            "type": "string",
            "description": "The status of the quote",
            "example": ""
          },
          "number": {
            "type": "string",
            "description": "The quote number - is a unique alpha numeric number per quote per company",
            "example": "QUOTE_101"
          },
          "po_number": {
            "type": "string",
            "description": "The purchase order number associated with this quote",
            "example": "PO-1234"
          },
          "terms": {
            "type": "string",
            "description": "The quote terms",
            "example": "These are some quote terms. Valid for 14 days."
          },
          "public_notes": {
            "type": "string",
            "description": "Public notes for the quote",
            "example": "These are public notes which the client may see"
          },
          "private_notes": {
            "type": "string",
            "description": "Private notes for the quote",
            "example": "These are private notes, not to be disclosed to the client"
          },
          "footer": {
            "type": "string",
            "description": "Footer text of quote",
            "example": "The text goes in the footer of the quote"
          },
          "custom_value1": {
            "type": "string",
            "description": "Custom value field",
            "example": "A custom value"
          },
          "custom_value2": {
            "type": "string",
            "description": "Custom value field",
            "example": "A custom value"
          },
          "custom_value3": {
            "type": "string",
            "description": "Custom value field",
            "example": "A custom value"
          },
          "custom_value4": {
            "type": "string",
            "description": "Custom value field",
            "example": "A custom value"
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": "GST"
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax name",
            "example": "VAT"
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "total_taxes": {
            "type": "number",
            "description": "The total taxes for the quote",
            "format": "float",
            "example": 10
          },
          "line_items": {
            "type": "object",
            "description": "An array of line items of the quote",
            "example": ""
          },
          "amount": {
            "type": "number",
            "description": "The total amount of the quote",
            "format": "float",
            "example": 10
          },
          "balance": {
            "type": "number",
            "description": "The balance due of the quote",
            "format": "float",
            "example": 10
          },
          "paid_to_date": {
            "type": "number",
            "description": "The amount that has been paid to date on the quote",
            "format": "float",
            "example": 10
          },
          "discount": {
            "type": "number",
            "description": "The quote discount",
            "format": "float",
            "example": 10
          },
          "partial": {
            "type": "number",
            "description": "The partial/deposit amount",
            "format": "float",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "Boolean flag determining if the quote is an amount or percentage",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Boolean flag determining if the quote has been deleted",
            "example": true
          },
          "uses_inclusive_taxes": {
            "type": "boolean",
            "description": "Defines the type of taxes used as either inclusive or exclusive",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "The Quote Date",
            "format": "date",
            "example": "1994-07-30"
          },
          "last_sent_date": {
            "type": "string",
            "description": "The last date the quote was sent out",
            "format": "date",
            "example": "1994-07-30"
          },
          "next_send_date": {
            "type": "string",
            "description": "The Next date for a reminder to be sent",
            "format": "date",
            "example": "1994-07-30"
          },
          "partial_due_date": {
            "type": "string",
            "description": "The date when the partial/deposit is due",
            "format": "date",
            "example": "1994-07-30"
          },
          "due_date": {
            "type": "string",
            "description": "The date the quote is valid until",
            "format": "date",
            "example": "1994-07-30"
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          },
          "last_viewed": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "custom_surcharge1": {
            "type": "number",
            "description": "First Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge2": {
            "type": "number",
            "description": "Second Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge3": {
            "type": "number",
            "description": "Third Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge4": {
            "type": "number",
            "description": "Fourth Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge_tax1": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax2": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax3": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax4": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          }
        }
      },
      "RecurringExpense": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the recurring expense",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The hashed id of the user who created the recurring expense",
            "example": "Opnel5aKBz"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The hashed id of the user assigned to this recurring expense",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The hashed id of the client",
            "example": "Opnel5aKBz"
          },
          "invoice_id": {
            "type": "string",
            "description": "The hashed id of the invoice",
            "example": "Opnel5aKBz"
          },
          "bank_id": {
            "type": "string",
            "description": "The id of the bank associated with this recurring expense",
            "example": "22"
          },
          "invoice_currency_id": {
            "type": "string",
            "description": "The currency id of the invoice associated with this recurring expense",
            "example": "1"
          },
          "expense_currency_id": {
            "type": "string",
            "description": "The currency id of the expense associated with this recurring expense",
            "example": "1"
          },
          "invoice_category_id": {
            "type": "string",
            "description": "The category id of the invoice",
            "example": "1"
          },
          "payment_type_id": {
            "type": "string",
            "description": "The payment type id",
            "example": "1"
          },
          "private_notes": {
            "type": "string",
            "description": "The recurring expense private notes",
            "example": "Private and confidential"
          },
          "public_notes": {
            "type": "string",
            "description": "The recurring expense public notes",
            "example": "This is the best client in the world"
          },
          "transaction_reference": {
            "type": "string",
            "description": "The recurring expense transaction reference",
            "example": "EXP-1223-2333"
          },
          "transcation_id": {
            "type": "string",
            "description": "The transaction id of the recurring expense",
            "example": "1233312312"
          },
          "custom_value1": {
            "type": "string",
            "description": "Custom value field",
            "example": "$1000"
          },
          "custom_value2": {
            "type": "string",
            "description": "Custom value field",
            "example": "2022-10-10"
          },
          "custom_value3": {
            "type": "string",
            "description": "Custom value field",
            "example": "short text"
          },
          "custom_value4": {
            "type": "string",
            "description": "Custom value field",
            "example": "very long text"
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": "GST"
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax name",
            "example": "VAT"
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "amount": {
            "type": "number",
            "description": "The total amount of the recurring expense",
            "format": "float",
            "example": 10
          },
          "frequency_id": {
            "type": "number",
            "description": "The frequency this recurring expense fires",
            "format": "int",
            "example": 1
          },
          "remaining_cycles": {
            "type": "number",
            "description": "The number of remaining cycles for this recurring expense",
            "format": "int",
            "example": 1
          },
          "foreign_amount": {
            "type": "number",
            "description": "The foreign currency amount of the recurring expense",
            "format": "float",
            "example": 10
          },
          "exchange_rate": {
            "type": "number",
            "description": "The exchange rate for the expernse",
            "format": "float",
            "example": 0.8
          },
          "date": {
            "type": "string",
            "description": "The date of the expense",
            "example": ""
          },
          "payment_date": {
            "type": "string",
            "description": "The date the expense was paid",
            "example": ""
          },
          "should_be_invoiced": {
            "type": "boolean",
            "description": "Boolean flag determining if the expense should be invoiced",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Boolean flag determining if the recurring expense is deleted",
            "example": true
          },
          "last_sent_date": {
            "type": "string",
            "description": "The Date it was sent last",
            "format": "date",
            "example": "1994-07-30"
          },
          "next_send_date": {
            "type": "string",
            "description": "The next send date",
            "format": "date",
            "example": "1994-07-30"
          },
          "invoice_documents": {
            "type": "boolean",
            "description": "Boolean flag determining if the documents associated with this expense should be passed onto the invoice if it is converted to an invoice",
            "example": true
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          }
        }
      },
      "RecurringInvoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the recurring invoice",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "Opnel5aKBz"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": "Opnel5aKBz"
          },
          "status_id": {
            "type": "string",
            "description": "The invoice status variable",
            "example": "4"
          },
          "frequency_id": {
            "type": "number",
            "description": "The recurring invoice frequency",
            "example": 4
          },
          "remaining_cycles": {
            "type": "number",
            "description": "The number of invoices left to be generated",
            "example": 4
          },
          "number": {
            "type": "string",
            "description": "The recurringinvoice number - is a unique alpha numeric number per invoice per company",
            "example": "INV_101"
          },
          "po_number": {
            "type": "string",
            "description": "The purchase order associated with this recurring invoice",
            "example": "PO-1234"
          },
          "terms": {
            "type": "string",
            "description": "The invoice terms",
            "example": "These are invoice terms"
          },
          "public_notes": {
            "type": "string",
            "description": "The public notes of the invoice",
            "example": "These are some public notes"
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes of the invoice",
            "example": "These are some private notes"
          },
          "footer": {
            "type": "string",
            "description": "The invoice footer notes",
            "example": ""
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom field value",
            "example": "2022-10-01"
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom field value",
            "example": "Something custom"
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom field value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom field value",
            "example": ""
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "total_taxes": {
            "type": "number",
            "description": "The total taxes for the invoice",
            "format": "float",
            "example": 10
          },
          "line_items": {
            "type": "object",
            "description": "An array of objects which define the line items of the invoice",
            "example": ""
          },
          "amount": {
            "type": "number",
            "description": "The invoice amount",
            "format": "float",
            "example": 10
          },
          "balance": {
            "type": "number",
            "description": "The invoice balance",
            "format": "float",
            "example": 10
          },
          "paid_to_date": {
            "type": "number",
            "description": "The amount paid on the invoice to date",
            "format": "float",
            "example": 10
          },
          "discount": {
            "type": "number",
            "description": "The invoice discount, can be an amount or a percentage",
            "format": "float",
            "example": 10
          },
          "partial": {
            "type": "number",
            "description": "The deposit/partial amount",
            "format": "float",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "Flag determining if the discount is an amount or a percentage",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Defines if the invoice has been deleted",
            "example": true
          },
          "uses_inclusive_taxes": {
            "type": "boolean",
            "description": "Defines the type of taxes used as either inclusive or exclusive",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "The Invoice Date",
            "format": "date",
            "example": "1994-07-30"
          },
          "last_sent_date": {
            "type": "string",
            "description": "The last date the invoice was sent out",
            "format": "date",
            "example": "1994-07-30"
          },
          "next_send_date": {
            "type": "string",
            "description": "The Next date for a reminder to be sent",
            "format": "date",
            "example": "1994-07-30"
          },
          "partial_due_date": {
            "type": "string",
            "description": "The due date for the deposit/partial amount",
            "format": "date",
            "example": "1994-07-30"
          },
          "due_date": {
            "type": "string",
            "description": "The due date of the invoice",
            "format": "date",
            "example": "1994-07-30"
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          },
          "last_viewed": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "custom_surcharge1": {
            "type": "number",
            "description": "First Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge2": {
            "type": "number",
            "description": "Second Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge3": {
            "type": "number",
            "description": "Third Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge4": {
            "type": "number",
            "description": "Fourth Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge_tax1": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax2": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax3": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax4": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          }
        }
      },
      "RecurringQuote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the recurring quote",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The user hashed id",
            "example": "Opnel5aKBz"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user hashed id",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The client hashed id",
            "example": "Opnel5aKBz"
          },
          "status_id": {
            "type": "string",
            "description": "The quote status variable",
            "example": "4"
          },
          "frequency_id": {
            "type": "number",
            "description": "The recurring quote frequency",
            "example": 4
          },
          "remaining_cycles": {
            "type": "number",
            "description": "The number of quotes left to be generated",
            "example": 4
          },
          "number": {
            "type": "string",
            "description": "The recurringquote number - is a unique alpha numeric number per quote per company",
            "example": "INV_101"
          },
          "po_number": {
            "type": "string",
            "description": "The purchase order associated with this recurring quote",
            "example": "PO-1234"
          },
          "terms": {
            "type": "string",
            "description": "The quote terms",
            "example": "These are quote terms"
          },
          "public_notes": {
            "type": "string",
            "description": "The public notes of the quote",
            "example": "These are some public notes"
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes of the quote",
            "example": "These are some private notes"
          },
          "footer": {
            "type": "string",
            "description": "The quote footer notes",
            "example": ""
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom field value",
            "example": "2022-10-01"
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom field value",
            "example": "Something custom"
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom field value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom field value",
            "example": ""
          },
          "tax_name1": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_name2": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate1": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_rate2": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "tax_name3": {
            "type": "string",
            "description": "The tax name",
            "example": ""
          },
          "tax_rate3": {
            "type": "number",
            "description": "The tax rate",
            "format": "float",
            "example": 10
          },
          "total_taxes": {
            "type": "number",
            "description": "The total taxes for the quote",
            "format": "float",
            "example": 10
          },
          "line_items": {
            "type": "object",
            "description": "An array of objects which define the line items of the quote",
            "example": ""
          },
          "amount": {
            "type": "number",
            "description": "The quote amount",
            "format": "float",
            "example": 10
          },
          "balance": {
            "type": "number",
            "description": "The quote balance",
            "format": "float",
            "example": 10
          },
          "paid_to_date": {
            "type": "number",
            "description": "The amount paid on the quote to date",
            "format": "float",
            "example": 10
          },
          "discount": {
            "type": "number",
            "description": "The quote discount, can be an amount or a percentage",
            "format": "float",
            "example": 10
          },
          "partial": {
            "type": "number",
            "description": "The deposit/partial amount",
            "format": "float",
            "example": 10
          },
          "is_amount_discount": {
            "type": "boolean",
            "description": "Flag determining if the discount is an amount or a percentage",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Defines if the quote has been deleted",
            "example": true
          },
          "uses_inclusive_taxes": {
            "type": "boolean",
            "description": "Defines the type of taxes used as either inclusive or exclusive",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "The quote Date",
            "format": "date",
            "example": "1994-07-30"
          },
          "last_sent_date": {
            "type": "string",
            "description": "The last date the quote was sent out",
            "format": "date",
            "example": "1994-07-30"
          },
          "next_send_date": {
            "type": "string",
            "description": "The Next date for a reminder to be sent",
            "format": "date",
            "example": "1994-07-30"
          },
          "partial_due_date": {
            "type": "string",
            "description": "The due date for the deposit/partial amount",
            "format": "date",
            "example": "1994-07-30"
          },
          "due_date": {
            "type": "string",
            "description": "The due date of the quote",
            "format": "date",
            "example": "1994-07-30"
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          },
          "last_viewed": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "custom_surcharge1": {
            "type": "number",
            "description": "First Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge2": {
            "type": "number",
            "description": "Second Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge3": {
            "type": "number",
            "description": "Third Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge4": {
            "type": "number",
            "description": "Fourth Custom Surcharge",
            "format": "float",
            "example": 10
          },
          "custom_surcharge_tax1": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax2": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax3": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          },
          "custom_surcharge_tax4": {
            "type": "boolean",
            "description": "Toggles charging taxes on custom surcharge amounts",
            "example": true
          }
        }
      },
      "SystemLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account hashed id",
            "example": "AS3df3A"
          },
          "company_id": {
            "type": "string",
            "description": "The company hashed id",
            "example": "AS3df3A"
          },
          "user_id": {
            "type": "string",
            "description": "The user_id hashed id",
            "example": "AS3df3A"
          },
          "client_id": {
            "type": "string",
            "description": "The client_id hashed id",
            "example": "AS3df3A"
          },
          "event_id": {
            "type": "integer",
            "description": "The Log Type ID",
            "example": 1
          },
          "category_id": {
            "type": "integer",
            "description": "The Category Type ID",
            "example": 1
          },
          "type_id": {
            "type": "integer",
            "description": "The Type Type ID",
            "example": 1
          },
          "log": {
            "type": "object",
            "description": "The json object of the error",
            "example": "{'key':'value'}"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp",
            "example": "2"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp",
            "example": "2"
          }
        }
      },
      "TaskSchedulerSchema": {
        "type": "object",
        "properties": {
          "paused": {
            "type": "boolean",
            "description": "The scheduler paused state",
            "example": false
          },
          "repeat_every": {
            "type": "string",
            "description": "Accepted values (DAY,WEEK,MONTH,3MONTHS,YEAR)",
            "example": "DAY"
          },
          "start_from": {
            "type": "integer",
            "description": "Timestamp when we should start the scheduler, default is today",
            "example": 1652898504
          },
          "job": {
            "type": "string",
            "description": "Job, we can find list of available jobs in Scheduler model",
            "example": "create_credit_report"
          },
          "date_range": {
            "type": "string",
            "description": "The string representation of the date range of data to be returned",
            "example": "last7"
          },
          "date_key": {
            "type": "string",
            "description": "The date column to search between.",
            "example": "created_at"
          },
          "start_date": {
            "type": "string",
            "description": "The start date to search between",
            "example": "2022-10-31"
          },
          "end_date": {
            "type": "string",
            "description": "The end date to search between",
            "example": "2022-10-31"
          },
          "report_keys": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Array of Keys to export",
              "example": "['name','date']"
            }
          }
        }
      },
      "UpdateTaskSchedulerSchema": {
        "type": "object",
        "properties": {
          "paused": {
            "type": "boolean",
            "description": "The scheduler paused state",
            "example": false
          },
          "repeat_every": {
            "type": "string",
            "description": "Accepted values (DAY,WEEK,MONTH,3MONTHS,YEAR)",
            "example": "DAY"
          },
          "start_from": {
            "type": "integer",
            "description": "Timestamp when we should start the scheduler, default is today",
            "example": 1652898504
          },
          "job": {
            "type": "string",
            "description": "Job, we can find list of available jobs in Scheduler model",
            "example": "create_credit_report"
          },
          "date_range": {
            "type": "string",
            "description": "The string representation of the date range of data to be returned",
            "example": "last7"
          },
          "date_key": {
            "type": "string",
            "description": "The date column to search between.",
            "example": "created_at"
          },
          "start_date": {
            "type": "string",
            "description": "The start date to search between",
            "example": "2022-10-31"
          },
          "end_date": {
            "type": "string",
            "description": "The end date to search between",
            "example": "2022-10-31"
          }
        }
      },
      "UpdateJobForASchedulerSchema": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Set action name, action names can be found in Scheduler Model",
            "example": "create_client_report"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the task",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The hashed id of the user who created the task",
            "example": "Opnel5aKBz"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The assigned user of the task",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The hashed if of the client",
            "example": "Opnel5aKBz"
          },
          "invoice_id": {
            "type": "string",
            "description": "The hashed id of the invoice associated with the task",
            "example": "Opnel5aKBz"
          },
          "project_id": {
            "type": "string",
            "description": "The hashed id of the project associated with the task",
            "example": "Opnel5aKBz"
          },
          "number": {
            "type": "string",
            "description": "The number of the task",
            "example": "TASK-123"
          },
          "time_log": {
            "type": "string",
            "description": "An array of unix time stamps defining the start and end times of the task",
            "example": "[[1,2],[3,4]]"
          },
          "is_running": {
            "type": "boolean",
            "description": "Determines if the task is still running",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Boolean flag determining if the task has been deleted",
            "example": true
          },
          "task_status_id": {
            "type": "string",
            "description": "The hashed id of the task status",
            "example": "Opnel5aKBz"
          },
          "description": {
            "type": "string",
            "description": "The task description",
            "example": "A wonder task to work on"
          },
          "duration": {
            "type": "integer",
            "description": "The task duration"
          },
          "task_status_order": {
            "type": "integer",
            "description": "The order of the task",
            "example": 4
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom value",
            "example": "2022-10-10"
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom value",
            "example": "$1100"
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom value",
            "example": "I need help"
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom value",
            "example": "INV-3343"
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 1434342123
          }
        }
      },
      "TaskStatus": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The task status name",
            "example": "Backlog"
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "is_deleted": {
            "type": "boolean",
            "description": "A boolean flag determining if the task status has been deleted",
            "example": true
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "archived_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "TaxRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Thie hashed id of the tax",
            "example": "Opnel5aKBz"
          },
          "name": {
            "type": "string",
            "description": "The tax name",
            "example": "GST"
          },
          "rate": {
            "type": "number",
            "description": "The tax rate",
            "example": 10
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Boolean flag determining if the tax has been deleted",
            "example": true
          }
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "The template HTML",
            "example": "<HTML></HTML>"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the user",
            "example": "Opnel5aKBz"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user",
            "example": "Brad"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user",
            "example": "Pitt"
          },
          "email": {
            "type": "string",
            "description": "The users email address",
            "example": "brad@pitt.com"
          },
          "phone": {
            "type": "string",
            "description": "The users phone number",
            "example": "555-1233-23232"
          },
          "signature": {
            "type": "string",
            "description": "The users sign off signature",
            "example": "Have a nice day!"
          },
          "avatar": {
            "type": "string",
            "description": "The users avatar",
            "example": "https://url.to.your/avatar.png"
          },
          "accepted_terms_version": {
            "type": "string",
            "description": "The version of the invoice ninja terms that has been accepted by the user",
            "example": "1.0.1"
          },
          "oauth_user_id": {
            "type": "string",
            "description": "The provider id of the oauth entity",
            "example": "jkhasdf789as6f675sdf768sdfs"
          },
          "oauth_provider_id": {
            "type": "string",
            "description": "The oauth entity id",
            "example": "google"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "The given data was invalid."
          },
          "errors": {
            "$ref": "#/components/schemas/ValidationError_errors"
          }
        }
      },
      "VendorContact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the vendor contact",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The hashed id of the user id",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": "Opnel5aKBz"
          },
          "vendor_id": {
            "type": "string",
            "description": "The hashed id of the vendor",
            "example": "Opnel5aKBz"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the contact",
            "example": "Harry"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact",
            "example": "Windsor"
          },
          "phone": {
            "type": "string",
            "description": "The contacts phone number",
            "example": "555-123-1234"
          },
          "custom_value1": {
            "type": "string",
            "description": "A custom value",
            "example": "2022-10-10"
          },
          "custom_value2": {
            "type": "string",
            "description": "A custom value",
            "example": "$1000"
          },
          "custom_value3": {
            "type": "string",
            "description": "A custom value",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "A custom value",
            "example": ""
          },
          "email": {
            "type": "string",
            "description": "The contact email address",
            "example": "harry@windsor.com"
          },
          "is_primary": {
            "type": "boolean",
            "description": "Boolean flag determining if the contact is the primary contact for the vendor",
            "example": true
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "deleted_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          }
        }
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The hashed id of the vendor",
            "example": "Opnel5aKBz"
          },
          "user_id": {
            "type": "string",
            "description": "The hashed id of the user who created the vendor",
            "example": "Opnel5aKBz"
          },
          "assigned_user_id": {
            "type": "string",
            "description": "The hashed id of the assigned user to this vendor",
            "example": "Opnel5aKBz"
          },
          "company_id": {
            "type": "string",
            "description": "The hashed id of the company",
            "example": "Opnel5aKBz"
          },
          "client_id": {
            "type": "string",
            "description": "The hashed id of the client",
            "example": "Opnel5aKBz"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorContact"
            }
          },
          "name": {
            "type": "string",
            "description": "The vendor name",
            "example": "Harry's cafe de wheels"
          },
          "website": {
            "type": "string",
            "description": "The website of the vendor",
            "example": "www.harry.com"
          },
          "private_notes": {
            "type": "string",
            "description": "The private notes of the vendor",
            "example": "Shhh, don't tell the vendor"
          },
          "industry_id": {
            "type": "string",
            "description": "The industry id of the vendor",
            "example": "1"
          },
          "size_id": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "address1": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "address2": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "city": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "state": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "postal_code": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "phone": {
            "type": "string",
            "description": "The client phone number",
            "example": "555-3434-3434"
          },
          "country_id": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "currency_id": {
            "type": "string",
            "description": "________",
            "example": "4"
          },
          "custom_value1": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value2": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value3": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "custom_value4": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "vat_number": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "id_number": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "number": {
            "type": "string",
            "description": "________",
            "example": ""
          },
          "is_deleted": {
            "type": "boolean",
            "description": "________",
            "example": true
          },
          "last_login": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp",
            "format": "integer",
            "example": 134341234234
          },
          "settings": {
            "$ref": "#/components/schemas/CompanySettings"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The subscription hashed id",
            "example": "AS3df3A"
          },
          "event_id": {
            "type": "string",
            "description": "The subscription event id",
            "example": "AS3df3A"
          },
          "target_url": {
            "type": "string",
            "description": "The api endpoint",
            "example": "AS3df3A"
          },
          "format": {
            "type": "string",
            "description": "JSON or UBL",
            "example": "JSON"
          }
        }
      },
      "v1_signup_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The user email address"
          },
          "first_name": {
            "type": "string",
            "description": "The signup users first name"
          },
          "last_name": {
            "type": "string",
            "description": "The signup users last name"
          },
          "terms_of_service": {
            "type": "boolean",
            "description": "The user accepted the terms of service"
          },
          "privacy_policy": {
            "type": "boolean",
            "description": "The user accepted the privacy policy"
          },
          "password": {
            "type": "string",
            "description": "The user password must meet minimum criteria ~ >6 characters",
            "example": "1234567"
          }
        }
      },
      "v1_login_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The user email address"
          },
          "password": {
            "type": "string",
            "description": "The user password must meet minimum criteria ~ >6 characters",
            "example": "1234567"
          }
        }
      },
      "v1_client_statement_body": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "description": "The start date of the statement period - format Y-m-d"
          },
          "end_date": {
            "type": "string",
            "description": "The start date of the statement period - format Y-m-d"
          },
          "client_id": {
            "type": "string",
            "description": "The hashed ID of the client"
          },
          "show_payments_table": {
            "type": "boolean",
            "description": "Flag which determines if the payments table is shown"
          },
          "show_aging_table": {
            "type": "boolean",
            "description": "Flag which determines if the aging table is shown"
          }
        }
      },
      "v1_emails_body": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "The email subject"
          },
          "body": {
            "type": "string",
            "description": "The email body"
          },
          "entity": {
            "type": "string",
            "description": "The entity name"
          },
          "entity_id": {
            "type": "string",
            "description": "The entity_id"
          },
          "template": {
            "type": "string",
            "description": "The template required"
          }
        }
      },
      "messages_send_body": {
        "type": "string",
        "properties": {
          "message": {
            "type": "string",
            "description": "The support message"
          }
        }
      },
      "v1_templates_body": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "The email template subject"
          },
          "body": {
            "type": "string",
            "description": "The email template body"
          }
        }
      },
      "ValidationError_errors": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "X-Api-Secret": {
        "name": "X-Api-Secret",
        "in": "header",
        "description": "The API secret as defined by the .env variable API_SECRET",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "password"
        }
      },
      "X-Requested-With": {
        "name": "X-Requested-With",
        "in": "header",
        "description": "Used to send the XMLHttpRequest header",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "readOnly": true,
          "example": "XMLHttpRequest"
        }
      },
      "X-Api-Token": {
        "name": "X-Api-Token",
        "in": "header",
        "description": "The API token to be used for authentication",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "HcRvs0oCvYbY5g3RzgBZrSBOChCiq8u4AL0ieuFN5gn4wUV14t0clVhfPc5OX99q"
        }
      },
      "X-Api-Password": {
        "name": "X-Api-Password",
        "in": "header",
        "description": "The login password when challenged",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "supersecretpassword"
        }
      },
      "include": {
        "name": "include",
        "in": "query",
        "description": "Includes child relationships in the response, format is comma separated",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "clients,invoices"
        }
      },
      "include_static": {
        "name": "include_static",
        "in": "query",
        "description": "Returns static variables",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "include_static=true"
        }
      },
      "clear_cache": {
        "name": "clear_cache",
        "in": "query",
        "description": "Clears the static cache",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "clear_cache=true"
        }
      },
      "index": {
        "name": "index",
        "in": "query",
        "description": "Replaces the default response index from data to a user specific string",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "user"
        }
      },
      "api_version": {
        "name": "api_version",
        "in": "query",
        "description": "The API version",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "number"
        }
      }
    },
    "headers": {
      "X-MINIMUM-CLIENT-VERSION": {
        "description": "The API version",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "number"
        }
      },
      "X-RateLimit-Remaining": {
        "description": "The number of requests left for the time window.",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      },
      "X-RateLimit-Limit": {
        "description": "The total number of requests in a given time window.",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      }
    }
  }
}